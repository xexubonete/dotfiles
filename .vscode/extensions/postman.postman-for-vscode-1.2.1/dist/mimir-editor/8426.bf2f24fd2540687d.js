"use strict";(self.webpackChunkmimir_editor=self.webpackChunkmimir_editor||[]).push([[8426],{18426:(e,t,o)=>{o.r(t),o.d(t,{combine:()=>u,devtools:()=>d,persist:()=>g,redux:()=>l,subscribeWithSelector:()=>p});var n=Object.defineProperty,a=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable,s=(e,t,o)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o;const l=(e,t)=>(o,n,l)=>(l.dispatch=t=>(o((o=>e(o,t)),!1,t),t),l.dispatchFromDevtools=!0,((e,t)=>{for(var o in t||(t={}))r.call(t,o)&&s(e,o,t[o]);if(a)for(var o of a(t))i.call(t,o)&&s(e,o,t[o]);return e})({dispatch:(...e)=>l.dispatch(...e)},t));function d(e,t){return(o,n,a)=>{var r;let i=!1;"string"!=typeof t||i||(console.warn("[zustand devtools middleware]: passing `name` as directly will be not allowed in next majorpass the `name` in an object `{ name: ... }` instead"),i=!0);const s=void 0===t?{name:void 0,anonymousActionType:void 0}:"string"==typeof t?{name:t}:t;let l;void 0!==(null==(r=null==s?void 0:s.serialize)?void 0:r.options)&&console.warn("[zustand devtools middleware]: `serialize.options` is deprecated, just use `serialize`");try{l=window.__REDUX_DEVTOOLS_EXTENSION__||window.top.__REDUX_DEVTOOLS_EXTENSION__}catch{}if(!l)return"undefined"!=typeof window&&console.warn("[zustand devtools middleware] Please install/enable Redux devtools extension"),e(o,n,a);let d=Object.create(l.connect(s)),p=!1;Object.defineProperty(a,"devtools",{get:()=>(p||(console.warn("[zustand devtools middleware] `devtools` property on the store is deprecated it will be removed in the next major.\nYou shouldn't interact with the extension directly. But in case you still want to you can patch `window.__REDUX_DEVTOOLS_EXTENSION__` directly"),p=!0),d),set:e=>{p||(console.warn("[zustand devtools middleware] `api.devtools` is deprecated, it will be removed in the next major.\nYou shouldn't interact with the extension directly. But in case you still want to you can patch `window.__REDUX_DEVTOOLS_EXTENSION__` directly"),p=!0),d=e}});let u=!1;Object.defineProperty(d,"prefix",{get:()=>(u||(console.warn("[zustand devtools middleware] along with `api.devtools`, `api.devtools.prefix` is deprecated.\nWe no longer prefix the actions/names"+s.name===void 0?", pass the `name` option to create a separate instance of devtools for each store.":", because the `name` option already creates a separate instance of devtools for each store."),u=!0),""),set:()=>{u||(console.warn("[zustand devtools middleware] along with `api.devtools`, `api.devtools.prefix` is deprecated.\nWe no longer prefix the actions/names"+s.name===void 0?", pass the `name` option to create a separate instance of devtools for each store.":", because the `name` option already creates a separate instance of devtools for each store."),u=!0)}});let v=!0;a.setState=(e,t,a)=>{o(e,t),v&&d.send(void 0===a?{type:s.anonymousActionType||"anonymous"}:"string"==typeof a?{type:a}:a,n())};const h=(...e)=>{const t=v;v=!1,o(...e),v=t},m=e(a.setState,n,a);if(d.init(m),a.dispatchFromDevtools&&"function"==typeof a.dispatch){let e=!1;const t=a.dispatch;a.dispatch=(...o)=>{"__setState"!==o[0].type||e||(console.warn('[zustand devtools middleware] "__setState" action type is reserved to set state from the devtools. Avoid using it.'),e=!0),t(...o)}}return d.subscribe((e=>{var t;switch(e.type){case"ACTION":return"string"!=typeof e.payload?void console.error("[zustand devtools middleware] Unsupported action format"):c(e.payload,(e=>{"__setState"!==e.type?a.dispatchFromDevtools&&"function"==typeof a.dispatch&&a.dispatch(e):h(e.state)}));case"DISPATCH":switch(e.payload.type){case"RESET":return h(m),d.init(a.getState());case"COMMIT":return d.init(a.getState());case"ROLLBACK":return c(e.state,(e=>{h(e),d.init(a.getState())}));case"JUMP_TO_STATE":case"JUMP_TO_ACTION":return c(e.state,(e=>{h(e)}));case"IMPORT_STATE":{const{nextLiftedState:o}=e.payload,n=null==(t=o.computedStates.slice(-1)[0])?void 0:t.state;if(!n)return;return h(n),void d.send(null,o)}case"PAUSE_RECORDING":return v=!v}return}})),m}}const c=(e,t)=>{let o;try{o=JSON.parse(e)}catch(e){console.error("[zustand devtools middleware] Could not parse the received json",e)}void 0!==o&&t(o)},p=e=>(t,o,n)=>{const a=n.subscribe;return n.subscribe=(e,t,o)=>{let r=e;if(t){const a=(null==o?void 0:o.equalityFn)||Object.is;let i=e(n.getState());r=o=>{const n=e(o);if(!a(i,n)){const e=i;t(i=n,e)}},(null==o?void 0:o.fireImmediately)&&t(i,i)}return a(r)},e(t,o,n)},u=(e,t)=>(o,n,a)=>Object.assign({},e,t(o,n,a));var v=Object.defineProperty,h=Object.getOwnPropertySymbols,m=Object.prototype.hasOwnProperty,f=Object.prototype.propertyIsEnumerable,y=(e,t,o)=>t in e?v(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o,w=(e,t)=>{for(var o in t||(t={}))m.call(t,o)&&y(e,o,t[o]);if(h)for(var o of h(t))f.call(t,o)&&y(e,o,t[o]);return e};const b=e=>t=>{try{const o=e(t);return o instanceof Promise?o:{then:e=>b(e)(o),catch(e){return this}}}catch(e){return{then(e){return this},catch:t=>b(t)(e)}}},g=(e,t)=>(o,n,a)=>{let r=w({getStorage:()=>localStorage,serialize:JSON.stringify,deserialize:JSON.parse,partialize:e=>e,version:0,merge:(e,t)=>w(w({},t),e)},t);(r.blacklist||r.whitelist)&&console.warn(`The ${r.blacklist?"blacklist":"whitelist"} option is deprecated and will be removed in the next version. Please use the 'partialize' option instead.`);let i=!1;const s=new Set,l=new Set;let d;try{d=r.getStorage()}catch(e){}if(!d)return e(((...e)=>{console.warn(`[zustand persist middleware] Unable to update item '${r.name}', the given storage is currently unavailable.`),o(...e)}),n,a);d.removeItem||console.warn(`[zustand persist middleware] The given storage for item '${r.name}' does not contain a 'removeItem' method, which will be required in v4.`);const c=b(r.serialize),p=()=>{const e=r.partialize(w({},n()));let t;r.whitelist&&Object.keys(e).forEach((t=>{var o;!(null==(o=r.whitelist)?void 0:o.includes(t))&&delete e[t]})),r.blacklist&&r.blacklist.forEach((t=>delete e[t]));const o=c({state:e,version:r.version}).then((e=>d.setItem(r.name,e))).catch((e=>{t=e}));if(t)throw t;return o},u=a.setState;a.setState=(e,t)=>{u(e,t),p()};const v=e(((...e)=>{o(...e),p()}),n,a);let h;const m=()=>{var e;if(!d)return;i=!1,s.forEach((e=>e(n())));const t=(null==(e=r.onRehydrateStorage)?void 0:e.call(r,n()))||void 0;return b(d.getItem.bind(d))(r.name).then((e=>{if(e)return r.deserialize(e)})).then((e=>{if(e){if("number"!=typeof e.version||e.version===r.version)return e.state;if(r.migrate)return r.migrate(e.state,e.version);console.error("State loaded from storage couldn't be migrated since no migrate function was provided")}})).then((e=>{var t;return h=r.merge(e,null!=(t=n())?t:v),o(h,!0),p()})).then((()=>{null==t||t(h,void 0),i=!0,l.forEach((e=>e(h)))})).catch((e=>{null==t||t(void 0,e)}))};return a.persist={setOptions:e=>{r=w(w({},r),e),e.getStorage&&(d=e.getStorage())},clearStorage:()=>{var e;null==(e=null==d?void 0:d.removeItem)||e.call(d,r.name)},rehydrate:()=>m(),hasHydrated:()=>i,onHydrate:e=>(s.add(e),()=>{s.delete(e)}),onFinishHydration:e=>(l.add(e),()=>{l.delete(e)})},m(),h||v}}}]);
//# sourceMappingURL=8426.bf2f24fd2540687d.js.map