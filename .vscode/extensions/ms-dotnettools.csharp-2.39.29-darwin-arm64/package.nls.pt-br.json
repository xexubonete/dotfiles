{
  "command.csharp.attachToProcess": "Anexar a um processo .NET 5+ ou .NET Core",
  "command.csharp.downloadDebugger": "Baixar o Depurador .NET Core",
  "command.csharp.listProcess": "Listar processo para anexar",
  "command.csharp.listRemoteDockerProcess": "Listar processos na conexão Docker",
  "command.csharp.listRemoteProcess": "Listar processos em conexão remota para anexar",
  "command.csharp.reportIssue": "Relatar um problema",
  "command.csharp.showDecompilationTerms": "Mostrar o contrato de termos do descompilador",
  "command.dotnet.generateAssets.currentProject": "Gerar Ativos para Compilação e Depuração",
  "command.dotnet.openSolution": "Abrir Solução",
  "command.dotnet.restartServer": "Reiniciar o Servidor de Linguagem",
  "command.dotnet.restore.all": "Restaurar Todos os Projetos",
  "command.dotnet.restore.project": "Restaurar Projeto",
  "command.dotnet.test.debugTestsInContext": "Testes de Depuração no Contexto",
  "command.dotnet.test.runTestsInContext": "Executar Testes no Contexto",
  "command.extension.showRazorCSharpWindow": "Mostrar Navalha CSharp",
  "command.extension.showRazorHtmlWindow": "Mostrar Razor HTML",
  "command.o.fixAll.document": "Corrigir todas as ocorrências de um problema de código no documento",
  "command.o.fixAll.project": "Corrigir todas as ocorrências de um problema de código no projeto",
  "command.o.fixAll.solution": "Corrigir todas as ocorrências de um problema de código na solução",
  "command.o.pickProjectAndStart": "Selecionar Projeto",
  "command.o.reanalyze.allProjects": "Analisar todos os projetos",
  "command.o.reanalyze.currentProject": "Analisar o projeto atual",
  "command.o.restart": "Reiniciar OmniSharp",
  "command.razor.reportIssue": "Relatar um problema do Razor",
  "configuration.csharp.inlayHints.enableInlayHintsForImplicitObjectCreation": "Mostrar dicas para a criação de objeto implícito",
  "configuration.csharp.inlayHints.enableInlayHintsForImplicitVariableTypes": "Mostrar as dicas para as variáveis com tipos inferidos",
  "configuration.csharp.inlayHints.enableInlayHintsForIndexerParameters": "Mostrar dicas para indexadores",
  "configuration.csharp.inlayHints.enableInlayHintsForLambdaParameterTypes": "Mostrar as dicas para os tipos de parâmetro lambda",
  "configuration.csharp.inlayHints.enableInlayHintsForTypes": "Exibir as dicas embutidas de tipo",
  "configuration.dotnet.backgroundAnalysis.analyzerDiagnosticsScope": "Execute a análise de código em segundo plano para: (Anteriormente `omnisharp.enableRoslynAnalyzers`)",
  "configuration.dotnet.backgroundAnalysis.analyzerDiagnosticsScope.fullSolution": "Solução inteira",
  "configuration.dotnet.backgroundAnalysis.analyzerDiagnosticsScope.none": "Nenhum",
  "configuration.dotnet.backgroundAnalysis.analyzerDiagnosticsScope.openFiles": "Abrir documentos",
  "configuration.dotnet.backgroundAnalysis.compilerDiagnosticsScope": "Mostrar erros e alertas do compilador para:",
  "configuration.dotnet.backgroundAnalysis.compilerDiagnosticsScope.fullSolution": "Solução inteira",
  "configuration.dotnet.backgroundAnalysis.compilerDiagnosticsScope.none": "Nenhum",
  "configuration.dotnet.backgroundAnalysis.compilerDiagnosticsScope.openFiles": "Abrir documentos",
  "configuration.dotnet.codeLens.enableReferencesCodeLens": "Especifica se as referências CodeLens devem ser mostradas. (Anteriormente `csharp.referencesCodeLens.enabled`)",
  "configuration.dotnet.codeLens.enableTestsCodeLens": "Especifica se o teste de execução e depuração CodeLens deve ser mostrado. (Anteriormente `csharp.testsCodeLens.enabled`)",
  "configuration.dotnet.completion.provideRegexCompletions": "Mostrar expressões regulares na lista de conclusão.",
  "configuration.dotnet.completion.showCompletionItemsFromUnimportedNamespaces": "Habilita o suporte para mostrar tipos e métodos de extensão não importados em listas de conclusão. Quando confirmado, a diretiva using apropriada será adicionada no topo do arquivo atual. (Anteriormente `omnisharp.enableImportCompletion`)",
  "configuration.dotnet.completion.showNameCompletionSuggestions": "Execute a conclusão automática do nome do objeto para os membros que você selecionou recentemente.",
  "configuration.dotnet.defaultSolution.description": "O caminho da solução padrão a ser aberta no workspace ou definido como 'desabilitado' para ignorá-la. (Anteriormente `omnisharp.defaultLaunchSolution`)",
  "configuration.dotnet.dotnetPath": "Especifica o caminho para um diretório de instalação dotnet a ser usado em vez do sistema padrão. Isso influencia apenas a instalação do dotnet a ser usada para hospedar o próprio servidor de idiomas. Exemplo: \"/home/username/mycustomdotnetdirectory\".",
  "configuration.dotnet.enableXamlTools": "Habilita ferramentas XAML ao usar o Kit de Desenvolvimento em C#",
  "configuration.dotnet.highlighting.highlightRelatedJsonComponents": "Destaque os componentes JSON relacionados sob o cursor.",
  "configuration.dotnet.highlighting.highlightRelatedRegexComponents": "Destaque os componentes de expressão regular relacionados sob o cursor.",
  "configuration.dotnet.implementType.insertionBehavior": "O local de inserção de propriedades, eventos e métodos Ao implementar interface ou classe abstrata.",
  "configuration.dotnet.implementType.insertionBehavior.atTheEnd": "Coloque-os no final.",
  "configuration.dotnet.implementType.insertionBehavior.withOtherMembersOfTheSameKind": "Coloque-os com outros membros do mesmo tipo.",
  "configuration.dotnet.implementType.propertyGenerationBehavior": "Comportamento de geração de propriedades ao implementar interface ou classe abstrata.",
  "configuration.dotnet.implementType.propertyGenerationBehavior.preferAutoProperties": "Eu prefiro propriedades automáticas.",
  "configuration.dotnet.implementType.propertyGenerationBehavior.preferThrowingProperties": "Eu prefiro lançar propriedades.",
  "configuration.dotnet.inlayHints.enableInlayHintsForLiteralParameters": "Mostrar as dicas para os literais",
  "configuration.dotnet.inlayHints.enableInlayHintsForObjectCreationParameters": "Mostrar as dicas para as expressões 'new'",
  "configuration.dotnet.inlayHints.enableInlayHintsForOtherParameters": "Mostrar as dicas para tudo",
  "configuration.dotnet.inlayHints.enableInlayHintsForParameters": "Exibir dicas de nomes de parâmetros embutidos",
  "configuration.dotnet.inlayHints.suppressInlayHintsForParametersThatDifferOnlyBySuffix": "Suprimir as dicas quando os nomes de parâmetros diferirem somente pelo sufixo",
  "configuration.dotnet.inlayHints.suppressInlayHintsForParametersThatMatchArgumentName": "Suprimir as dicas quando o argumento corresponder ao nome do parâmetro",
  "configuration.dotnet.inlayHints.suppressInlayHintsForParametersThatMatchMethodIntent": "Suprimir as dicas quando o nome do parâmetro corresponder à intenção do método",
  "configuration.dotnet.navigation.navigateToDecompiledSources": "Habilite a navegação para fontes não compatíveis.",
  "configuration.dotnet.preferCSharpExtension": "Força o carregamento dos projetos somente com a extensão C#.  Isso pode ser útil ao usar tipos de projetos herdados que não são suportados pelo C# Dev Kit. (Requer recarga da janela)",
  "configuration.dotnet.projects.binaryLogPath": "Sets a path where MSBuild binary logs are written to when loading projects, to help diagnose loading errors.",
  "configuration.dotnet.projects.enableAutomaticRestore": "Habilita a restauração automática do NuGet se a extensão detectar que os ativos estão ausentes.",
  "configuration.dotnet.quickInfo.showRemarksInQuickInfo": "Mostrar informações de comentários ao exibir o símbolo.",
  "configuration.dotnet.server.componentPaths": "Permite substituir o caminho da pasta para componentes internos do servidor de linguagem (por exemplo, substituir o caminho .roslynDevKit no diretório de extensão para usar componentes compilados localmente)",
  "configuration.dotnet.server.componentPaths.roslynDevKit": "Substitui o caminho da pasta para o componente .roslynDevKit do servidor de linguagem",
  "configuration.dotnet.server.componentPaths.xamlTools": "Substitui o caminho da pasta para o componente .xamlTools do servidor de linguagem",
  "configuration.dotnet.server.crashDumpPath": "Define um caminho de pasta onde os despejos de memória serão gravados se o servidor de idioma travar.  Deve ser gravável pelo usuário.",
  "configuration.dotnet.server.extensionPaths": "Substituir o caminho para os argumentos --extension do servidor de idiomas",
  "configuration.dotnet.server.path": "Especifica o caminho absoluto para o executável do servidor (LSP ou O#). Quando deixado em branco, a versão fixada na extensão C# é usada. (Anteriormente `omnisharp.path`)",
  "configuration.dotnet.server.startTimeout": "Especifica um tempo limite (em ms) para o cliente iniciar e conectar-se com êxito ao servidor de idioma.",
  "configuration.dotnet.server.suppressLspErrorToasts": "Suprime a exibição de notificações do erro se o servidor encontrar um erro recuperável.",
  "configuration.dotnet.server.trace": "Define o nível de log para o servidor de idiomas",
  "configuration.dotnet.server.waitForDebugger": "Passa o sinalizador --debug ao iniciar o servidor para permitir que um depurador seja anexado. (Anteriormente `omnisharp.waitForDebugger`)",
  "configuration.dotnet.symbolSearch.searchReferenceAssemblies": "Pesquisar símbolos em montagens de referência. Afeta os recursos que exigem pesquisa de símbolos, como adicionar importações.",
  "configuration.dotnet.unitTestDebuggingOptions": "Opções a serem usadas com o depurador ao iniciar a depuração de teste de unidade. (Anteriormente `csharp.unitTestDebuggingOptions`)",
  "configuration.dotnet.unitTests.runSettingsPath": "Path to the .runsettings file which should be used when running unit tests. (Previously `omnisharp.testRunSettings`)",
  "configuration.omnisharp.autoStart": "Specifies whether the OmniSharp server will be automatically started or not. If false, OmniSharp can be started with the 'Restart OmniSharp' command",
  "configuration.omnisharp.csharp.format.enable": "Enable/disable default C# formatter (requires restart).",
  "configuration.omnisharp.csharp.maxProjectFileCountForDiagnosticAnalysis": "Specifies the maximum number of files for which diagnostics are reported for the whole workspace. If this limit is exceeded, diagnostics will be shown for currently opened files only. Specify 0 or less to disable the limit completely.",
  "configuration.omnisharp.csharp.referencesCodeLens.filteredSymbols": "Array of custom symbol names for which CodeLens should be disabled.",
  "configuration.omnisharp.csharp.semanticHighlighting.enabled": "Enable/disable Semantic Highlighting for C# files (Razor files currently unsupported). Defaults to false. Close open files for changes to take effect.",
  "configuration.omnisharp.csharp.showOmnisharpLogOnError": "Shows the OmniSharp log in the Output pane when OmniSharp reports an error.",
  "configuration.omnisharp.csharp.suppressBuildAssetsNotification": "Suppress the notification window to add missing assets to build or debug the application.",
  "configuration.omnisharp.csharp.suppressDotnetInstallWarning": "Suppress the warning that the .NET Core SDK is not on the path.",
  "configuration.omnisharp.csharp.suppressDotnetRestoreNotification": "Suppress the notification window to perform a 'dotnet restore' when dependencies can't be resolved.",
  "configuration.omnisharp.csharp.suppressHiddenDiagnostics": "Suppress 'hidden' diagnostics (such as 'unnecessary using directives') from appearing in the editor or the Problems pane.",
  "configuration.omnisharp.csharp.suppressProjectJsonWarning": "Suppress the warning that project.json is no longer a supported project format for .NET Core applications",
  "configuration.omnisharp.disableMSBuildDiagnosticWarning": "Specifies whether notifications should be shown if OmniSharp encounters warnings or errors loading a project. Note that these warnings/errors are always emitted to the OmniSharp log",
  "configuration.omnisharp.dotNetCliPaths": "Paths to a local download of the .NET CLI to use for running any user code.",
  "configuration.omnisharp.dotnet.server.useOmnisharp": "Switches to use the Omnisharp server for language features when enabled (requires restart). This option will not be honored with C# Dev Kit installed.",
  "configuration.omnisharp.enableAsyncCompletion": "(EXPERIMENTAL) Enables support for resolving completion edits asynchronously. This can speed up time to show the completion list, particularly override and partial method completion lists, at the cost of slight delays after inserting a completion item. Most completion items will have no noticeable impact with this feature, but typing immediately after inserting an override or partial method completion, before the insert is completed, can have unpredictable results.",
  "configuration.omnisharp.enableDecompilationSupport": "Enables support for decompiling external references instead of viewing metadata.",
  "configuration.omnisharp.enableEditorConfigSupport": "Enables support for reading code style, naming convention and analyzer settings from .editorconfig.",
  "configuration.omnisharp.enableLspDriver": "Enables support for the experimental language protocol based engine (requires reload to setup bindings correctly)",
  "configuration.omnisharp.enableMsBuildLoadProjectsOnDemand": "If true, MSBuild project system will only load projects for files that were opened in the editor. This setting is useful for big C# codebases and allows for faster initialization of code navigation features only for projects that are relevant to code that is being edited. With this setting enabled OmniSharp may load fewer projects and may thus display incomplete reference lists for symbols.",
  "configuration.omnisharp.loggingLevel": "Specifies the level of logging output from the OmniSharp server.",
  "configuration.omnisharp.maxFindSymbolsItems": "The maximum number of items that 'Go to Symbol in Workspace' operation can show. The limit is applied only when a positive number is specified here.",
  "configuration.omnisharp.maxProjectResults": "The maximum number of projects to be shown in the 'Select Project' dropdown (maximum 250).",
  "configuration.omnisharp.minFindSymbolsFilterLength": "The minimum number of characters to enter before 'Go to Symbol in Workspace' operation shows any results.",
  "configuration.omnisharp.monoPath": "Specifies the path to a mono installation to use when \"useModernNet\" is set to false, instead of the default system one. Example: \"/Library/Frameworks/Mono.framework/Versions/Current\"",
  "configuration.omnisharp.organizeImportsOnFormat": "Specifies whether 'using' directives should be grouped and sorted during document formatting.",
  "configuration.omnisharp.projectFilesExcludePattern": "The exclude pattern used by OmniSharp to find all project files.",
  "configuration.omnisharp.projectLoadTimeout": "The time Visual Studio Code will wait for the OmniSharp server to start. Time is expressed in seconds.",
  "configuration.omnisharp.razor.completion.commitElementsWithSpace": "Specifies whether to commit tag helper and component elements with a space.",
  "configuration.omnisharp.razor.devmode": "Forces the extension to run in a mode that enables local Razor.VSCode development.",
  "configuration.omnisharp.razor.format.codeBlockBraceOnNextLine": "Forces the open brace after an @code or @functions directive to be on the following line.",
  "configuration.omnisharp.razor.format.enable": "Enable/disable default Razor formatter.",
  "configuration.omnisharp.razor.plugin.path": "Overrides the path to the Razor plugin dll.",
  "configuration.omnisharp.sdkIncludePrereleases": "Specifies whether to include preview versions of the .NET SDK when determining which version to use for project loading. Applies when \"useModernNet\" is set to true.",
  "configuration.omnisharp.sdkPath": "Specifies the path to a .NET SDK installation to use for project loading instead of the highest version installed. Applies when \"useModernNet\" is set to true. Example: /home/username/dotnet/sdks/6.0.300.",
  "configuration.omnisharp.sdkVersion": "Specifies the version of the .NET SDK to use for project loading instead of the highest version installed. Applies when \"useModernNet\" is set to true. Example: 6.0.300.",
  "configuration.omnisharp.useEditorFormattingSettings": "Specifes whether OmniSharp should use VS Code editor settings for C# code formatting (use of tabs, indentation size).",
  "configuration.omnisharp.useModernNet.description": "Use OmniSharp build for .NET 6. This version _does not_ support non-SDK-style .NET Framework projects, including Unity. SDK-style Framework, .NET Core, and .NET 5+ projects should see significant performance improvements.",
  "configuration.omnisharp.useModernNet.title": "Use .NET 6 build of OmniSharp",
  "configuration.razor.languageServer.debug": "Especifica se é preciso aguardar o anexo de depuração ao iniciar o servidor de linguagem.",
  "configuration.razor.languageServer.directory": "Substitui o caminho para o diretório do Servidor de Linguagem Razor.",
  "configuration.razor.languageServer.forceRuntimeCodeGeneration": "(EXPERIMENTAL) Habilitar geração de código de tempo de design/tempo de execução combinado para arquivos Razor",
  "configuration.razor.server.trace": "Especifica o nível de log a ser usado para o servidor Razor.",
  "debuggers.coreclr.configurationSnippets.description.attach": "Anexe o depurador do .NET (coreclr) a um processo em execução. Isso também pode ser feito usando o comando 'Anexar a um processo do .NET 5+ ou do .NET Core'.",
  "debuggers.coreclr.configurationSnippets.description.blazor-hosted": "Esse snippet é usado para iniciar um novo processo no depurador Blazor WebAssembly (blazorwasm), especificando o caminho para o executável a ser iniciado. Na maioria dos casos, o \".NET: O snippet de inicialização do projeto C# é uma opção melhor, mas esse snippet pode ser usado para ter controle total sobre todas as opções de inicialização. Esse snippet é para projetos hospedados do Blazor, que é um projeto que tem um aplicativo ASP.NET Core de back-end para atender aos seus arquivos.",
  "debuggers.coreclr.configurationSnippets.description.blazor-standalone": "Esse snippet é usado para iniciar um novo processo no depurador Blazor WebAssembly (blazorwasm). Na maioria dos casos, o \".NET: O snippet de inicialização do projeto C# é uma opção melhor, mas esse snippet pode ser usado para ter controle total sobre todas as opções de inicialização. Esse snippet é para projetos autônomos do Blazor, que é um projeto que não tem um aplicativo ASP.NET Core de back-end para atender aos seus arquivos.",
  "debuggers.coreclr.configurationSnippets.description.console-local": "Esse snippet é usado para iniciar um novo processo no depurador do .NET (coreclr), especificando o caminho para o executável a ser iniciado. Na maioria dos casos, o \".NET: O snippet de inicialização do projeto C# é uma opção melhor. Esse snippet é útil quando o projeto foi criado fora dessa instância do VS Code ou você deseja hospedar o código .NET em um executável personalizado, como uma versão específica de 'dotnet.exe'/'dotnet' ou o .NET Code é hospedado por um aplicativo nativo. Este snippet é para aplicativos de console.",
  "debuggers.coreclr.configurationSnippets.description.remote": "Este snippet mostra como depurar remotamente o código .NET **sem** usar a comunicação remota do VS Code. Ele deve ser usado nos casos em que você deseja compilar seu projeto localmente, mas o executa em outro computador.",
  "debuggers.coreclr.configurationSnippets.description.web-local": "Esse snippet é usado para iniciar um novo processo no depurador do .NET (coreclr), especificando o caminho para o executável a ser iniciado. Na maioria dos casos, o \".NET: O snippet de inicialização do projeto C# é uma opção melhor. Esse snippet é útil quando o projeto foi criado fora dessa instância do VS Code ou você deseja hospedar o código .NET em um executável personalizado, como uma versão específica de 'dotnet.exe'/'dotnet' ou o .NET Code é hospedado por um aplicativo nativo. Este snippet é para aplicativos Web (ASP.NET Core).",
  "debuggers.coreclr.configurationSnippets.label.attach-local": ".NET: Anexar a um processo do .NET",
  "debuggers.coreclr.configurationSnippets.label.attach-remote": ".NET: Depuração remota - Anexar a um processo do .NET",
  "debuggers.coreclr.configurationSnippets.label.blazor-hosted": ".NET: Web Assembly - Iniciar projeto Blazor hospedado",
  "debuggers.coreclr.configurationSnippets.label.blazor-standalone": ".NET: Web Assembly – Iniciar projeto autônomo do Blazor",
  "debuggers.coreclr.configurationSnippets.label.console-local": ".NET: Iniciar Arquivo executável (Console)",
  "debuggers.coreclr.configurationSnippets.label.console-remote": ".NET: Depuração remota - Iniciar Arquivo executável (console)",
  "debuggers.coreclr.configurationSnippets.label.web-local": ".NET: Iniciar Arquivo executável (Web)",
  "debuggers.dotnet.configurationSnippets.description": "Este snippet configura VS Code para depurar um projeto C#. As opções de depuração (exemplo: argumentos para o executável) podem ser configuradas por meio do arquivo '<project-directory>/Properties/launchSettings.json'.",
  "debuggers.dotnet.configurationSnippets.label": ".NET: Iniciar projeto C#",
  "debuggers.dotnet.launch.launchConfigurationId.description": "A ID de configuração de inicialização a ser usada. A cadeia de caracteres vazia usará a configuração ativa atual.",
  "debuggers.dotnet.launch.projectPath.description": "Caminho para o arquivo .csproj.",
  "generateOptionsSchema.args.0.description": "Argumentos de linha de comando passados para o programa.",
  "generateOptionsSchema.args.1.description": "Versão em cadeia de caracteres dos argumentos de linha de comando passada para o programa.",
  "generateOptionsSchema.checkForDevCert.description": "Se você estiver iniciando um projeto da Web no Windows ou macOS e isso estiver habilitado, o depurador verificará se o computador possui um certificado HTTPS autoassinado usado para desenvolver servidores da Web em execução em pontos de extremidade https. Se não especificado, o padrão é verdadeiro quando `serverReadyAction` é definido. Esta opção não faz nada no Linux, VS Code remoto e cenários de IU da Web do VS Code. Se o certificado HTTPS não for encontrado ou não for confiável, o usuário será solicitado a instalá-lo/confiar nele.",
  "generateOptionsSchema.console.externalTerminal.enumDescription": "O processo de destino será executado dentro de seu próprio terminal externo. Ao usar esse modo, você precisará alternar o foco entre Visual Studio Code janela do terminal externo.",
  "generateOptionsSchema.console.integratedTerminal.enumDescription": "O processo de destino será executado dentro VS Code terminal integrado do cliente.",
  "generateOptionsSchema.console.internalConsole.enumDescription": "A entrada e a saída do console do processo de destino (stdin) (stdout/stderr) são roteados por meio do Console de Depuração VS Code.",
  "generateOptionsSchema.console.markdownDescription": "Indica em qual console o programa de destino deve ser iniciado. Veja https://aka.ms/VSCode-CS-LaunchJson-Console para mais informação.",
  "generateOptionsSchema.console.settingsDescription": "**Observação:** _This é usada apenas para projetos de console iniciados com a configuração de depuração 'dotnet' type_.\r\n\r\nIndica em qual console o programa de destino deve ser iniciado. Veja https://aka.ms/VSCode-CS-LaunchJson-Console para mais informação.",
  "generateOptionsSchema.cwd.description": "Caminho para o diretório de trabalho do programa que está sendo depurado. O padrão é o espaço de trabalho atual.",
  "generateOptionsSchema.debugServer.description": "Somente para desenvolvimento de extensão de depuração: se uma porta for especificada, o VS Code tentará se conectar a um adaptador de depuração em execução no modo do servidor",
  "generateOptionsSchema.enableStepFiltering.markdownDescription": "Sinalizador para habilitar o passo a passo sobre Propriedades e Operadores. Esta opção é padronizada como `true`.",
  "generateOptionsSchema.env.description": "Variáveis de ambiente passadas para o programa.",
  "generateOptionsSchema.envFile.markdownDescription": "Variáveis de ambiente passadas para o programa por um arquivo. Por exemplo. `${workspaceFolder}/.env`",
  "generateOptionsSchema.expressionEvaluationOptions.allowFastEvaluate.description": "Quando verdadeiro (o estado padrão), o depurador tentará uma avaliação mais rápida simulando a execução de propriedades e métodos simples.",
  "generateOptionsSchema.expressionEvaluationOptions.allowImplicitFuncEval.description": "Quando true (o estado padrão), o depurador chamará automaticamente os métodos de propriedade `get` e outras chamadas de função implícitas.",
  "generateOptionsSchema.expressionEvaluationOptions.allowToString.markdownDescription": "Quando true (o estado padrão), o depurador chamará automaticamente `ToString` para formatar objetos. Esta opção não terá efeito se `allowImplicitFuncEval` for `false`.",
  "generateOptionsSchema.expressionEvaluationOptions.description": "Opções para controlar como o depurador avalia expressões em dicas de dados, nas seções \"Inspeção\" e \"Variáveis\" da exibição de depuração ou no Console de Depuração.",
  "generateOptionsSchema.expressionEvaluationOptions.showRawValues.description": "Quando for verdadeiro, o depurador mostrará a estrutura bruta de objetos em janelas de variáveis.",
  "generateOptionsSchema.externalConsole.markdownDescription": "O atributo `externalConsole` está preterido, use `console` em seu lugar. Esta opção padrão é `false`.",
  "generateOptionsSchema.justMyCode.markdownDescription": "Quando ativado (o padrão), o depurador apenas exibe e entra no código do usuário (\"Meu Código\"), ignorando o código do sistema e outros códigos otimizados ou que não possuem símbolos de depuração. [Mais informações](https://aka.ms/VSCode-CS-LaunchJson-JustMyCode)",
  "generateOptionsSchema.launchBrowser.args.description": "Os argumentos a serem passados ao comando para abrir o navegador. Isso é usado apenas se o elemento específico da plataforma (`osx`, `linux` ou `windows`) não especificar um valor para `args`. Use ${auto-detect-url} para usar automaticamente o endereço que o servidor está ouvindo.",
  "generateOptionsSchema.launchBrowser.description": "Descreve as opções para iniciar um navegador da Web como parte do lançamento",
  "generateOptionsSchema.launchBrowser.enabled.description": "Se a inicialização do navegador da web está habilitada. Esta opção é padronizada como `true`.",
  "generateOptionsSchema.launchBrowser.linux.args.description": "Os argumentos a serem passados ao comando para abrir o navegador. Use ${auto-detect-url} para usar automaticamente o endereço que o servidor está ouvindo.",
  "generateOptionsSchema.launchBrowser.linux.command.description": "O executável que iniciará o navegador da web.",
  "generateOptionsSchema.launchBrowser.linux.description": "Opções de configuração de inicialização da Web específicas do Linux. Por padrão, isso iniciará o navegador usando `xdg-open`.",
  "generateOptionsSchema.launchBrowser.osx.args.description": "Os argumentos a serem passados ao comando para abrir o navegador. Use ${auto-detect-url} para usar automaticamente o endereço que o servidor está ouvindo.",
  "generateOptionsSchema.launchBrowser.osx.command.description": "O executável que iniciará o navegador da web.",
  "generateOptionsSchema.launchBrowser.osx.description": "Opções de configuração de inicialização da Web específicas do OSX. Por padrão, isso iniciará o navegador usando `open`.",
  "generateOptionsSchema.launchBrowser.windows.args.description": "Os argumentos a serem passados ao comando para abrir o navegador. Use ${auto-detect-url} para usar automaticamente o endereço que o servidor está ouvindo.",
  "generateOptionsSchema.launchBrowser.windows.command.description": "O executável que iniciará o navegador da web.",
  "generateOptionsSchema.launchBrowser.windows.description": "Opções de configuração de inicialização da Web específicas do Windows. Por padrão, isso iniciará o navegador usando `cmd /c start`.",
  "generateOptionsSchema.launchSettingsFilePath.markdownDescription": "O caminho para um arquivo launchSettings.json. Se isso não for definido, o depurador irá procurar em `{cwd}/Properties/launchSettings.json`.",
  "generateOptionsSchema.launchSettingsProfile.description": "Se especificado, indica o nome do perfil em launchSettings.json a ser usado. Isso será ignorado se launchSettings.json não for encontrado. launchSettings.json será lido a partir do caminho especificado deve ser a propriedade 'launchSettingsFilePath' ou {cwd}/Properties/launchSettings.json se isso não estiver definido. Se for definido como null ou uma cadeia de caracteres vazia, launchSettings.json será ignorado. Se este valor não for especificado, o primeiro perfil 'Projeto' será usado.",
  "generateOptionsSchema.logging.browserStdOut.markdownDescription": "Sinalize para determinar se o texto stdout da inicialização do navegador da Web deve ser registrado na janela de saída. Esta opção é padronizada como `true`.",
  "generateOptionsSchema.logging.consoleUsageMessage.description": "Controla se uma mensagem é registrada quando o processo de destino chama uma API “Console.Read*” e stdin é redirecionado para o console.",
  "generateOptionsSchema.logging.description": "Sinalizadores para determinar quais tipos de mensagens devem ser registrados na janela de saída.",
  "generateOptionsSchema.logging.diagnosticsLog.debugEngineAPITracing.all.enumDescription": "Imprima todas as chamadas à API do depurador. Isso é muito detalhado.",
  "generateOptionsSchema.logging.diagnosticsLog.debugEngineAPITracing.error.enumDescription": "Falhas de impressão de chamadas à API do depurador.",
  "generateOptionsSchema.logging.diagnosticsLog.debugEngineAPITracing.markdownDescription": "Controla se as chamadas de API para Microsoft.VisualStudio.Debugger.Engine/vsdebugeng.h devem ser impressas na janela de saída. Essa opção tem como padrão `none`.",
  "generateOptionsSchema.logging.diagnosticsLog.debugEngineAPITracing.none.enumDescription": "Desabilitar chamadas de API de rastreamento",
  "generateOptionsSchema.logging.diagnosticsLog.debugRuntimeEventTracing.markdownDescription": "Sinalizador para determinar se o rastreamento detalhado para eventos gerados pelo tempo de execução subjacente deve ser habilitado. Essa opção tem como padrão `false`.",
  "generateOptionsSchema.logging.diagnosticsLog.description": "Configurações para controlar quais mensagens são impressas na janela de saída do log de diagnóstico do depurador. Esse log destina-se a ajudar a solucionar problemas com o depurador.",
  "generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.error.enumDescription": "Imprima mensagens de diagnóstico em nível de erro.",
  "generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.important.enumDescription": "Imprima mensagens de diagnóstico importantes.",
  "generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.markdownDescription": "Controla quais mensagens são impressas na janela de saída do despachante do depurador. Se não for especificado, o padrão será `none`, a menos que uma das configurações de log detalhado esteja habilitada (`debugEngineAPITracing`, `debugRuntimeEventTracing`, `expressionEvaluationTracing` ou `startDebuggingTracing`), caso em que o padrão muda para `normal`.",
  "generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.none.enumDescription": "Não imprima mensagens de diagnóstico adicionais.",
  "generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.normal.enumDescription": "Imprima todas as mensagens de diagnóstico não detalhadas.",
  "generateOptionsSchema.logging.diagnosticsLog.expressionEvaluationTracing.markdownDescription": "Sinalizador para determinar se o rastreamento detalhado para avaliação de expressão deve ser habilitado. Essa opção tem como padrão `false`.",
  "generateOptionsSchema.logging.diagnosticsLog.protocolMessages.markdownDescription": "Sinalizador para determinar se as mensagens do protocolo DAP trocadas entre o depurador C# e a interface do usuário devem ser registradas na janela de saída. Essa opção tem como padrão `false`.",
  "generateOptionsSchema.logging.diagnosticsLog.startDebuggingTracing.markdownDescription": "Sinalizador para determinar se o rastreamento detalhado para iniciar a depuração deve ser habilitado. Essa opção tem como padrão `false`.",
  "generateOptionsSchema.logging.elapsedTiming.markdownDescription": "Se for verdade, o log de mensagens de protocolo incluirá as propriedades `adapterElapsedTime` e `engineElapsedTime` para indicar a quantidade de tempo, em microssegundos, que uma solicitação levou. Essa opção tem como padrão `false`.",
  "generateOptionsSchema.logging.engineLogging.deprecationMessage": "A configuração 'logging.engineLogging' foi descontinuada em favor de 'logging.diagnosticsLog.protocolMessages'.",
  "generateOptionsSchema.logging.exceptions.markdownDescription": "Sinalize para determinar se as mensagens de exceção devem ser registradas na janela de saída. Esta opção é padronizada como `true`.",
  "generateOptionsSchema.logging.moduleLoad.markdownDescription": "Sinalizador para determinar se os eventos de carregamento do módulo devem ser registrados na janela de saída. Esta opção é padronizada como `true`.",
  "generateOptionsSchema.logging.processExit.markdownDescription": "Controla se uma mensagem é registrada quando o processo de destino sai ou a depuração é interrompida. Esta opção é padronizada como `true`.",
  "generateOptionsSchema.logging.programOutput.markdownDescription": "Sinalizador para determinar se a saída do programa deve ser registrada na janela de saída quando não estiver usando um console externo. Esta opção é padronizada como `true`.",
  "generateOptionsSchema.logging.threadExit.markdownDescription": "Controla se uma mensagem é registrada quando um thread no processo de destino sai. Esta opção padrão é `false`.",
  "generateOptionsSchema.pipeTransport.debuggerPath.description": "O caminho completo para o depurador na máquina de destino.",
  "generateOptionsSchema.pipeTransport.description": "Quando presente, informa ao depurador para se conectar a um computador remoto usando outro executável como um pipe que retransmitirá a entrada/saída padrão entre o VS Code e o executável de back-end do depurador .NET Core (vsdbg).",
  "generateOptionsSchema.pipeTransport.linux.description": "Opções de configuração de inicialização de pipe específicas do Linux",
  "generateOptionsSchema.pipeTransport.linux.pipeArgs.0.description": "Argumentos de linha de comando passados para o programa pipe. O token ${debuggerCommand} em pipeArgs será substituído pelo comando completo do depurador, esse token pode ser especificado em linha com outros argumentos. Se ${debuggerCommand} não for usado em nenhum argumento, o comando completo do depurador será adicionado ao final da lista de argumentos.",
  "generateOptionsSchema.pipeTransport.linux.pipeArgs.1.description": "Versão em cadeia de caracteres dos argumentos de linha de comando passados para o programa pipe. O token ${debuggerCommand} em pipeArgs será substituído pelo comando completo do depurador, esse token pode ser especificado em linha com outros argumentos. Se ${debuggerCommand} não for usado em nenhum argumento, o comando completo do depurador será adicionado ao final da lista de argumentos.",
  "generateOptionsSchema.pipeTransport.linux.pipeCwd.description": "O caminho totalmente qualificado para o diretório de trabalho para o programa do pipe.",
  "generateOptionsSchema.pipeTransport.linux.pipeEnv.description": "Variáveis de ambiente passadas para o programa do pipe.",
  "generateOptionsSchema.pipeTransport.linux.pipeProgram.description": "O comando do pipe totalmente qualificado para executar.",
  "generateOptionsSchema.pipeTransport.linux.quoteArgs.description": "Os argumentos que contêm caracteres que precisam ser citados (exemplo: espaços) devem ser citados? O padrão é 'verdadeiro'. Se definido como falso, o comando do depurador não será mais citado automaticamente.",
  "generateOptionsSchema.pipeTransport.osx.description": "Opções de configuração de inicialização de pipe específicas do OSX",
  "generateOptionsSchema.pipeTransport.osx.pipeArgs.0.description": "Argumentos de linha de comando passados para o programa pipe. O token ${debuggerCommand} em pipeArgs será substituído pelo comando completo do depurador, esse token pode ser especificado em linha com outros argumentos. Se ${debuggerCommand} não for usado em nenhum argumento, o comando completo do depurador será adicionado ao final da lista de argumentos.",
  "generateOptionsSchema.pipeTransport.osx.pipeArgs.1.description": "Versão em cadeia de caracteres dos argumentos de linha de comando passados para o programa pipe. O token ${debuggerCommand} em pipeArgs será substituído pelo comando completo do depurador, esse token pode ser especificado em linha com outros argumentos. Se ${debuggerCommand} não for usado em nenhum argumento, o comando completo do depurador será adicionado ao final da lista de argumentos.",
  "generateOptionsSchema.pipeTransport.osx.pipeCwd.description": "O caminho totalmente qualificado para o diretório de trabalho para o programa do pipe.",
  "generateOptionsSchema.pipeTransport.osx.pipeEnv.description": "Variáveis de ambiente passadas para o programa do pipe.",
  "generateOptionsSchema.pipeTransport.osx.pipeProgram.description": "O comando do pipe totalmente qualificado para executar.",
  "generateOptionsSchema.pipeTransport.osx.quoteArgs.description": "Os argumentos que contêm caracteres que precisam ser citados (exemplo: espaços) devem ser citados? O padrão é 'verdadeiro'. Se definido como falso, o comando do depurador não será mais citado automaticamente.",
  "generateOptionsSchema.pipeTransport.pipeArgs.0.description": "Argumentos de linha de comando passados para o programa pipe. O token ${debuggerCommand} em pipeArgs será substituído pelo comando completo do depurador, esse token pode ser especificado em linha com outros argumentos. Se ${debuggerCommand} não for usado em nenhum argumento, o comando completo do depurador será adicionado ao final da lista de argumentos.",
  "generateOptionsSchema.pipeTransport.pipeArgs.1.description": "Versão em cadeia de caracteres dos argumentos de linha de comando passados para o programa pipe. O token ${debuggerCommand} em pipeArgs será substituído pelo comando completo do depurador, esse token pode ser especificado em linha com outros argumentos. Se ${debuggerCommand} não for usado em nenhum argumento, o comando completo do depurador será adicionado ao final da lista de argumentos.",
  "generateOptionsSchema.pipeTransport.pipeCwd.description": "O caminho totalmente qualificado para o diretório de trabalho para o programa do pipe.",
  "generateOptionsSchema.pipeTransport.pipeEnv.description": "Variáveis de ambiente passadas para o programa do pipe.",
  "generateOptionsSchema.pipeTransport.pipeProgram.description": "O comando do pipe totalmente qualificado para executar.",
  "generateOptionsSchema.pipeTransport.quoteArgs.description": "Os argumentos que contêm caracteres que precisam ser citados (exemplo: espaços) devem ser citados? O padrão é 'verdadeiro'. Se definido como falso, o comando do depurador não será mais citado automaticamente.",
  "generateOptionsSchema.pipeTransport.windows.description": "Opções de configuração de inicialização de pipe específicas do Windows",
  "generateOptionsSchema.pipeTransport.windows.pipeArgs.0.description": "Argumentos de linha de comando passados para o programa pipe. O token ${debuggerCommand} em pipeArgs será substituído pelo comando completo do depurador, esse token pode ser especificado em linha com outros argumentos. Se ${debuggerCommand} não for usado em nenhum argumento, o comando completo do depurador será adicionado ao final da lista de argumentos.",
  "generateOptionsSchema.pipeTransport.windows.pipeArgs.1.description": "Versão em cadeia de caracteres dos argumentos de linha de comando passados para o programa pipe. O token ${debuggerCommand} em pipeArgs será substituído pelo comando completo do depurador, esse token pode ser especificado em linha com outros argumentos. Se ${debuggerCommand} não for usado em nenhum argumento, o comando completo do depurador será adicionado ao final da lista de argumentos.",
  "generateOptionsSchema.pipeTransport.windows.pipeCwd.description": "O caminho totalmente qualificado para o diretório de trabalho para o programa do pipe.",
  "generateOptionsSchema.pipeTransport.windows.pipeEnv.description": "Variáveis de ambiente passadas para o programa do pipe.",
  "generateOptionsSchema.pipeTransport.windows.pipeProgram.description": "O comando do pipe totalmente qualificado para executar.",
  "generateOptionsSchema.pipeTransport.windows.quoteArgs.description": "Os argumentos que contêm caracteres que precisam ser citados (exemplo: espaços) devem ser citados? O padrão é 'verdadeiro'. Se definido como falso, o comando do depurador não será mais citado automaticamente.",
  "generateOptionsSchema.processId.0.markdownDescription": "O ID do processo ao qual anexar. Use \"\" para obter uma lista de processos em execução aos quais anexar. Se `processId` for usado, `processName` não deve ser usado.",
  "generateOptionsSchema.processId.1.markdownDescription": "O ID do processo ao qual anexar. Use \"\" para obter uma lista de processos em execução aos quais anexar. Se `processId` for usado, `processName` não deve ser usado.",
  "generateOptionsSchema.processName.markdownDescription": "O nome do processo ao qual anexar. Se for usado, `processId` não deve ser usado.",
  "generateOptionsSchema.program.markdownDescription": "Caminho para a dll do aplicativo ou o executável do host do .NET Core a ser iniciado.\r\nEsta propriedade normalmente assume o formato: '${workspaceFolder}/bin/Debug/(target-framework)/(project-name.dll)'\r\n\r\nExemplo: '${workspaceFolder}/bin/Debug/netcoreapp1.1/MyProject.dll'\r\n\r\nOnde:\r\n'(target-framework)' é a estrutura para a qual o projeto depurado está sendo compilado. Normalmente, isso é encontrado no arquivo de projeto como a propriedade 'TargetFramework'.\r\n\r\n'(project-name.dll)' é o nome da dll de saída de build do projeto depurado. Normalmente, é o mesmo que o nome do arquivo de projeto, mas com uma '.dll' extensão.",
  "generateOptionsSchema.requireExactSource.markdownDescription": "Sinalize para exigir que o código-fonte atual corresponda ao pdb. Esta opção é padronizada como `true`.",
  "generateOptionsSchema.sourceFileMap.markdownDescription": "Mapeia caminhos de tempo de construção para locais de origem local. Todas as instâncias do caminho de tempo de compilação serão substituídas pelo caminho de origem local.\r\n\r\nExemplo:\r\n\r\n`{\"<build-path>\":\"<local-source-path>\"}`",
  "generateOptionsSchema.sourceLinkOptions.additionalItems.enabled.markdownDescription": "O Source Link está habilitado para este URL? Se não for especificado, esta opção assume como padrão `true`.",
  "generateOptionsSchema.sourceLinkOptions.markdownDescription": "Opções para controlar como o Source Link se conecta aos servidores web. [Mais informações](https://aka.ms/VSCode-DotNet-SourceLink)",
  "generateOptionsSchema.stopAtEntry.markdownDescription": "Se verdadeiro, o depurador deve parar no ponto de entrada do destino. Esta opção padrão é `false`.",
  "generateOptionsSchema.suppressJITOptimizations.markdownDescription": "Se for verdade, quando um módulo otimizado (.dll compilado na configuração Release) for carregado no processo de destino, o depurador solicitará ao compilador Just-In-Time para gerar código com otimizações desabilitadas. [Mais informações](https://aka.ms/VSCode-CS-LaunchJson-SuppressJITOptimizations)",
  "generateOptionsSchema.symbolOptions.cachePath.description": "Diretório onde os símbolos baixados dos servidores de símbolos devem ser armazenados em cache. Se não for especificado, no Windows, o depurador será padronizado como %TEMP%\\SymbolCache, e no Linux e macOS, o depurador será padronizado como ~/.dotnet/symbolcache.",
  "generateOptionsSchema.symbolOptions.description": "Opções para controlar como os símbolos (arquivos .pdb) são encontrados e carregados.",
  "generateOptionsSchema.symbolOptions.moduleFilter.description": "Fornece opções para controlar para quais módulos (arquivos .dll) o depurador tentará carregar símbolos (arquivos .pdb).",
  "generateOptionsSchema.symbolOptions.moduleFilter.excludedModules.description": "Matriz de módulos para a qual o depurador NÃO deve carregar símbolos. Há suporte para curingas (exemplo: MyCompany.*.dll).\r\n\r\nEssa propriedade será ignorada, a menos que 'mode' esteja definido como 'loadAllButExcluded'.",
  "generateOptionsSchema.symbolOptions.moduleFilter.includeSymbolsNextToModules.description": "Se for verdadeira, para qualquer módulo NOT na matriz 'includedModules', o depurador ainda verificará ao lado do próprio módulo e do executável de inicialização, mas não verificará os caminhos na lista de pesquisa de símbolo. Esta opção é padronizada como 'true'.\r\n\r\nessa propriedade será ignorada, a menos que 'mode' esteja definido como 'loadOnlyIncluded'.",
  "generateOptionsSchema.symbolOptions.moduleFilter.includeSymbolsOnDemand.description": "Se for true, para qualquer módulo NOT na matriz \"includedModules\", o depurador tentará baixar símbolos quando detectar que símbolos são necessários, como ao tentar entrar no módulo. Esta opção usa como padrão \"true\".\r\n\r\nEsta propriedade é ignorada, a menos que \"mode\" esteja definido como \"loadOnlyIncluded\".",
  "generateOptionsSchema.symbolOptions.moduleFilter.includedModules.description": "Matriz de módulos para a qual o depurador deve carregar símbolos. Há suporte para curingas (exemplo: MyCompany.*.dll).\r\n\r\nessa propriedade será ignorada, a menos que 'mode' esteja definido como 'loadOnlyIncluded'.",
  "generateOptionsSchema.symbolOptions.moduleFilter.mode.description": "Controla em quais dos dois modos operacionais básicos o filtro de módulo opera.",
  "generateOptionsSchema.symbolOptions.moduleFilter.mode.loadAllButExcluded.enumDescription": "Carregue símbolos para todos os módulos, a menos que o módulo esteja na matriz 'excludedModules'.",
  "generateOptionsSchema.symbolOptions.moduleFilter.mode.loadOnlyIncluded.enumDescription": "Não tente carregar símbolos para o módulo ANY, a menos que ele esteja na matriz 'includedModules' ou seja incluído por meio da configuração 'includeSymbolsNextToModules'.",
  "generateOptionsSchema.symbolOptions.searchMicrosoftSymbolServer.description": "Se for 'true', o servidor de Símbolos da Microsoft (https​://msdl.microsoft.com​/download/symbols) será adicionado ao caminho de pesquisa de símbolos. Se não for especificado, essa opção usará como padrão 'false'.",
  "generateOptionsSchema.symbolOptions.searchNuGetOrgSymbolServer.description": "Se 'true', o servidor de símbolos NuGet.org (https​://symbols.nuget.org​/download/symbols) é adicionado ao caminho de pesquisa de símbolos. Se não for especificado, esta opção assume como padrão 'false'.",
  "generateOptionsSchema.symbolOptions.searchPaths.description": "Matriz de URLs de servidores de símbolos (exemplo: http​://MyExampleSymbolServer) ou diretórios (exemplo: /build/symbols) para procurar arquivos .pdb. Esses diretórios serão pesquisados além dos locais padrão -- próximos ao módulo e ao caminho onde o pdb foi originalmente descartado.",
  "generateOptionsSchema.targetArchitecture.markdownDescription": "[Com suporte apenas na depuração local do macOS]\r\n\r\nA arquitetura do depurado. Isso será detectado automaticamente, a menos que esse parâmetro seja definido. Os valores permitidos são `x86_64` ou `arm64`.",
  "generateOptionsSchema.targetOutputLogPath.description": "Quando definido, o texto que o aplicativo de destino grava em stdout e stderr (ex: Console.WriteLine) será salvo no arquivo especificado. Essa opção será ignorada se o console for definido como algo diferente de internalConsole. Por exemplo. '${workspaceFolder}/out.txt'",
  "generateOptionsSchema.type.markdownDescription": "Type type of code to debug. Can be either `coreclr` for .NET Core debugging, or `clr` for Desktop .NET Framework. `clr` only works on Windows as the Desktop framework is Windows-only.",
  "viewsWelcome.debug.contents": "[Gerar ativos C# para Build e Depuração](command:dotnet.generateAssets)\r\n\r\nPara saber mais sobre launch.json, consulte [Como configurar launch.json para depuração C#](https://aka.ms/VSCode-CS-LaunchJson)."
}