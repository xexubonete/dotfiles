{
  "command.csharp.attachToProcess": "Dołączanie do procesu platformy .NET 5 lub .NET Core",
  "command.csharp.downloadDebugger": "Pobierz debuger platformy .NET Core",
  "command.csharp.listProcess": "Wyświetl proces do dołączenia",
  "command.csharp.listRemoteDockerProcess": "Wyświetl listę procesów w połączeniu platformy Docker",
  "command.csharp.listRemoteProcess": "Wyświetl listę procesów w połączeniu zdalnym do dołączenia",
  "command.csharp.reportIssue": "Zgłoś problem",
  "command.csharp.showDecompilationTerms": "Pokaż umowę warunków dekompilowania",
  "command.dotnet.generateAssets.currentProject": "Generuj zasoby na potrzeby kompilacji i debugowania",
  "command.dotnet.openSolution": "Otwórz rozwiązanie",
  "command.dotnet.restartServer": "Ponownie uruchom serwer języka",
  "command.dotnet.restore.all": "Przywróć wszystkie projekty",
  "command.dotnet.restore.project": "Przywróć projekt",
  "command.dotnet.test.debugTestsInContext": "Debuguj testy w kontekście",
  "command.dotnet.test.runTestsInContext": "Uruchom testy w kontekście",
  "command.extension.showRazorCSharpWindow": "Pokaż Razor CSharp",
  "command.extension.showRazorHtmlWindow": "Pokaż kod Html Razor",
  "command.o.fixAll.document": "Rozwiąż wszystkie wystąpienia problemu z kodem w dokumencie",
  "command.o.fixAll.project": "Rozwiąż wszystkie wystąpienia problemu z kodem w projekcie",
  "command.o.fixAll.solution": "Rozwiąż wszystkie wystąpienia problemu z kodem w rozwiązaniu",
  "command.o.pickProjectAndStart": "Wybierz projekt",
  "command.o.reanalyze.allProjects": "Analizuj wszystkie projekty",
  "command.o.reanalyze.currentProject": "Analizuj bieżący projekt",
  "command.o.restart": "Uruchom ponownie aplikację OmniSharp",
  "command.razor.reportIssue": "Zgłoś problem z aparatem Razor",
  "configuration.csharp.inlayHints.enableInlayHintsForImplicitObjectCreation": "Pokazuj wskazówki dotyczące niejawnego tworzenia obiektów",
  "configuration.csharp.inlayHints.enableInlayHintsForImplicitVariableTypes": "Pokaż wskazówki dla zmiennych z wnioskowanymi typami",
  "configuration.csharp.inlayHints.enableInlayHintsForIndexerParameters": "Pokaż wskazówki dla indeksatorów",
  "configuration.csharp.inlayHints.enableInlayHintsForLambdaParameterTypes": "Pokaż wskazówki dla typów parametrów funkcji lambda",
  "configuration.csharp.inlayHints.enableInlayHintsForTypes": "Wyświetl wskazówki w tekście dla typów",
  "configuration.dotnet.backgroundAnalysis.analyzerDiagnosticsScope": "Uruchom analizę kodu w tle dla: (Wcześniej „omnisharp.enableRoslynAnalyzers”)",
  "configuration.dotnet.backgroundAnalysis.analyzerDiagnosticsScope.fullSolution": "Całe rozwiązanie",
  "configuration.dotnet.backgroundAnalysis.analyzerDiagnosticsScope.none": "Brak",
  "configuration.dotnet.backgroundAnalysis.analyzerDiagnosticsScope.openFiles": "Otwórz dokumenty",
  "configuration.dotnet.backgroundAnalysis.compilerDiagnosticsScope": "Pokaż błędy i ostrzeżenia kompilatora dla:",
  "configuration.dotnet.backgroundAnalysis.compilerDiagnosticsScope.fullSolution": "Całe rozwiązanie",
  "configuration.dotnet.backgroundAnalysis.compilerDiagnosticsScope.none": "Brak",
  "configuration.dotnet.backgroundAnalysis.compilerDiagnosticsScope.openFiles": "Otwórz dokumenty",
  "configuration.dotnet.codeLens.enableReferencesCodeLens": "Określa, czy ma być wyświetlana funkcja CodeLens odwołań. (Wcześniej „csharp.referencesCodeLens.enabled”)",
  "configuration.dotnet.codeLens.enableTestsCodeLens": "Określa, czy ma być wyświetlana funkcja CodeLens testu przebiegu i debugowania. (Wcześniej „csharp.testsCodeLens.enabled”)",
  "configuration.dotnet.completion.provideRegexCompletions": "Pokaż wyrażenia regularne na liście uzupełniania.",
  "configuration.dotnet.completion.showCompletionItemsFromUnimportedNamespaces": "Zapewnia obsługę wyświetlania niezaimportowanych typów i niezaimportowanych metod rozszerzeń na listach uzupełniania. Po zadeklarowaniu odpowiednia dyrektywa using zostanie dodana w górnej części bieżącego pliku. (Wcześniej „omnisharp.enableImportCompletion”)",
  "configuration.dotnet.completion.showNameCompletionSuggestions": "Wykonaj automatyczne uzupełnianie nazw obiektów dla elementów członkowskich, które zostały ostatnio wybrane.",
  "configuration.dotnet.defaultSolution.description": "Ścieżka domyślnego rozwiązania, która ma zostać otwarta w obszarze roboczym, lub ustawiona na wartość „wyłącz”, aby je pominąć. (Poprzednio „omnisharp.defaultLaunchSolution”)",
  "configuration.dotnet.dotnetPath": "Określa ścieżkę do katalogu instalacyjnego dotnet, który ma być używany zamiast domyślnego katalogu systemowego. Ma to wpływ tylko na instalację dotnet używaną do hostowania samego serwera językowego. Przykład: „/home/username/mycustomdotnetdirectory”.",
  "configuration.dotnet.enableXamlTools": "Włącza narzędzia XAML podczas korzystania z zestawu deweloperskiego języka C#",
  "configuration.dotnet.highlighting.highlightRelatedJsonComponents": "Wyróżnij powiązane składniki JSON pod kursorem.",
  "configuration.dotnet.highlighting.highlightRelatedRegexComponents": "Wyróżnij powiązane składniki wyrażenia regularnego pod kursorem.",
  "configuration.dotnet.implementType.insertionBehavior": "Lokalizacja wstawiania właściwości, zdarzeń i metod podczas implementowania interfejsu lub klasy abstrakcyjnej.",
  "configuration.dotnet.implementType.insertionBehavior.atTheEnd": "Umieść je na końcu.",
  "configuration.dotnet.implementType.insertionBehavior.withOtherMembersOfTheSameKind": "Umieść je z innymi elementami członkowskimi tego samego rodzaju.",
  "configuration.dotnet.implementType.propertyGenerationBehavior": "Zachowanie generowania właściwości podczas implementowania interfejsu lub klasy abstrakcyjnej.",
  "configuration.dotnet.implementType.propertyGenerationBehavior.preferAutoProperties": "Preferuj właściwości automatyczne.",
  "configuration.dotnet.implementType.propertyGenerationBehavior.preferThrowingProperties": "Preferuj właściwości przerzucane.",
  "configuration.dotnet.inlayHints.enableInlayHintsForLiteralParameters": "Pokaż wskazówki dla literałów",
  "configuration.dotnet.inlayHints.enableInlayHintsForObjectCreationParameters": "Pokaż wskazówki dla wyrażeń „new”",
  "configuration.dotnet.inlayHints.enableInlayHintsForOtherParameters": "Pokaż wskazówki dla wszystkich innych elementów",
  "configuration.dotnet.inlayHints.enableInlayHintsForParameters": "Wyświetl wskazówki dotyczące nazwy parametru wbudowanego",
  "configuration.dotnet.inlayHints.suppressInlayHintsForParametersThatDifferOnlyBySuffix": "Pomiń wskazówki, gdy nazwy parametrów różnią się tylko sufiksem",
  "configuration.dotnet.inlayHints.suppressInlayHintsForParametersThatMatchArgumentName": "Pomiń wskazówki, gdy argument pasuje do nazwy parametru",
  "configuration.dotnet.inlayHints.suppressInlayHintsForParametersThatMatchMethodIntent": "Pomiń wskazówki, gdy nazwa parametru pasuje do intencji metody",
  "configuration.dotnet.navigation.navigateToDecompiledSources": "Włącz nawigację do zdekompilowanych źródeł.",
  "configuration.dotnet.preferCSharpExtension": "Wymusza ładowanie projektów tylko z rozszerzeniem języka C#.  Może to być przydatne w przypadku korzystania ze starszych typów projektów, które nie są obsługiwane przez zestaw C# Dev Kit. (Wymaga ponownego załadowania okna)",
  "configuration.dotnet.projects.binaryLogPath": "Sets a path where MSBuild binary logs are written to when loading projects, to help diagnose loading errors.",
  "configuration.dotnet.projects.enableAutomaticRestore": "Włącza automatyczne przywracanie pakietu NuGet, jeśli rozszerzenie wykryje brak zasobów.",
  "configuration.dotnet.quickInfo.showRemarksInQuickInfo": "Pokaż informacje o uwagach podczas wyświetlania symbolu.",
  "configuration.dotnet.server.componentPaths": "Umożliwia zastąpienie ścieżki folderu dla wbudowanych składników serwera języka (na przykład przesłonięcie ścieżki roslynDevKit w katalogu rozszerzenia w celu użycia składników skompilowanych lokalnie)",
  "configuration.dotnet.server.componentPaths.roslynDevKit": "Przesłania ścieżkę folderu dla składnika roslynDevKit serwera językowego",
  "configuration.dotnet.server.componentPaths.xamlTools": "Zastępuje ścieżkę folderu dla składnika xamlTools serwera języka",
  "configuration.dotnet.server.crashDumpPath": "Ustawia ścieżkę folderu, w której są zapisywane zrzuty awaryjne w przypadku awarii serwera języka.  Użytkownik musi mieć możliwość zapisu.",
  "configuration.dotnet.server.extensionPaths": "Przesłoń ścieżkę do serwera językowego --argumenty rozszerzenia",
  "configuration.dotnet.server.path": "Określa ścieżkę bezwzględną do pliku wykonywalnego serwera (LSP lub O#). W przypadku pozostawienia tej wartości pustej, używana jest wersja przypięta do rozszerzenia języka C#. (Wcześniej „omnisharp.path”)",
  "configuration.dotnet.server.startTimeout": "Określa limit czasu (w ms) dla pomyślnego uruchomienia klienta i nawiązania połączenia z serwerem języka.",
  "configuration.dotnet.server.suppressLspErrorToasts": "Pomija wyświetlanie wyskakujących powiadomień o błędach, jeśli serwer napotka błąd do odzyskania.",
  "configuration.dotnet.server.trace": "Ustawia poziom rejestrowania dla serwera języka",
  "configuration.dotnet.server.waitForDebugger": "Przekazuje flagę --debug podczas uruchamiania serwera, aby umożliwić dołączenie debugera. (Wcześniej „omnisharp.waitForDebugger”)",
  "configuration.dotnet.symbolSearch.searchReferenceAssemblies": "Wyszukaj symbole w zestawach odwołań. Ma to wpływ na funkcje wymagające wyszukiwania symboli, takie jak dodawanie importów.",
  "configuration.dotnet.unitTestDebuggingOptions": "Opcje używane z debugerem podczas uruchamiania na potrzeby debugowania testów jednostkowych. (Wcześniej „csharp.unitTestDebuggingOptions”)",
  "configuration.dotnet.unitTests.runSettingsPath": "Path to the .runsettings file which should be used when running unit tests. (Previously `omnisharp.testRunSettings`)",
  "configuration.omnisharp.autoStart": "Specifies whether the OmniSharp server will be automatically started or not. If false, OmniSharp can be started with the 'Restart OmniSharp' command",
  "configuration.omnisharp.csharp.format.enable": "Enable/disable default C# formatter (requires restart).",
  "configuration.omnisharp.csharp.maxProjectFileCountForDiagnosticAnalysis": "Specifies the maximum number of files for which diagnostics are reported for the whole workspace. If this limit is exceeded, diagnostics will be shown for currently opened files only. Specify 0 or less to disable the limit completely.",
  "configuration.omnisharp.csharp.referencesCodeLens.filteredSymbols": "Array of custom symbol names for which CodeLens should be disabled.",
  "configuration.omnisharp.csharp.semanticHighlighting.enabled": "Enable/disable Semantic Highlighting for C# files (Razor files currently unsupported). Defaults to false. Close open files for changes to take effect.",
  "configuration.omnisharp.csharp.showOmnisharpLogOnError": "Shows the OmniSharp log in the Output pane when OmniSharp reports an error.",
  "configuration.omnisharp.csharp.suppressBuildAssetsNotification": "Suppress the notification window to add missing assets to build or debug the application.",
  "configuration.omnisharp.csharp.suppressDotnetInstallWarning": "Suppress the warning that the .NET Core SDK is not on the path.",
  "configuration.omnisharp.csharp.suppressDotnetRestoreNotification": "Suppress the notification window to perform a 'dotnet restore' when dependencies can't be resolved.",
  "configuration.omnisharp.csharp.suppressHiddenDiagnostics": "Suppress 'hidden' diagnostics (such as 'unnecessary using directives') from appearing in the editor or the Problems pane.",
  "configuration.omnisharp.csharp.suppressProjectJsonWarning": "Suppress the warning that project.json is no longer a supported project format for .NET Core applications",
  "configuration.omnisharp.disableMSBuildDiagnosticWarning": "Specifies whether notifications should be shown if OmniSharp encounters warnings or errors loading a project. Note that these warnings/errors are always emitted to the OmniSharp log",
  "configuration.omnisharp.dotNetCliPaths": "Paths to a local download of the .NET CLI to use for running any user code.",
  "configuration.omnisharp.dotnet.server.useOmnisharp": "Switches to use the Omnisharp server for language features when enabled (requires restart). This option will not be honored with C# Dev Kit installed.",
  "configuration.omnisharp.enableAsyncCompletion": "(EXPERIMENTAL) Enables support for resolving completion edits asynchronously. This can speed up time to show the completion list, particularly override and partial method completion lists, at the cost of slight delays after inserting a completion item. Most completion items will have no noticeable impact with this feature, but typing immediately after inserting an override or partial method completion, before the insert is completed, can have unpredictable results.",
  "configuration.omnisharp.enableDecompilationSupport": "Enables support for decompiling external references instead of viewing metadata.",
  "configuration.omnisharp.enableEditorConfigSupport": "Enables support for reading code style, naming convention and analyzer settings from .editorconfig.",
  "configuration.omnisharp.enableLspDriver": "Enables support for the experimental language protocol based engine (requires reload to setup bindings correctly)",
  "configuration.omnisharp.enableMsBuildLoadProjectsOnDemand": "If true, MSBuild project system will only load projects for files that were opened in the editor. This setting is useful for big C# codebases and allows for faster initialization of code navigation features only for projects that are relevant to code that is being edited. With this setting enabled OmniSharp may load fewer projects and may thus display incomplete reference lists for symbols.",
  "configuration.omnisharp.loggingLevel": "Specifies the level of logging output from the OmniSharp server.",
  "configuration.omnisharp.maxFindSymbolsItems": "The maximum number of items that 'Go to Symbol in Workspace' operation can show. The limit is applied only when a positive number is specified here.",
  "configuration.omnisharp.maxProjectResults": "The maximum number of projects to be shown in the 'Select Project' dropdown (maximum 250).",
  "configuration.omnisharp.minFindSymbolsFilterLength": "The minimum number of characters to enter before 'Go to Symbol in Workspace' operation shows any results.",
  "configuration.omnisharp.monoPath": "Specifies the path to a mono installation to use when \"useModernNet\" is set to false, instead of the default system one. Example: \"/Library/Frameworks/Mono.framework/Versions/Current\"",
  "configuration.omnisharp.organizeImportsOnFormat": "Specifies whether 'using' directives should be grouped and sorted during document formatting.",
  "configuration.omnisharp.projectFilesExcludePattern": "The exclude pattern used by OmniSharp to find all project files.",
  "configuration.omnisharp.projectLoadTimeout": "The time Visual Studio Code will wait for the OmniSharp server to start. Time is expressed in seconds.",
  "configuration.omnisharp.razor.completion.commitElementsWithSpace": "Specifies whether to commit tag helper and component elements with a space.",
  "configuration.omnisharp.razor.devmode": "Forces the extension to run in a mode that enables local Razor.VSCode development.",
  "configuration.omnisharp.razor.format.codeBlockBraceOnNextLine": "Forces the open brace after an @code or @functions directive to be on the following line.",
  "configuration.omnisharp.razor.format.enable": "Enable/disable default Razor formatter.",
  "configuration.omnisharp.razor.plugin.path": "Overrides the path to the Razor plugin dll.",
  "configuration.omnisharp.sdkIncludePrereleases": "Specifies whether to include preview versions of the .NET SDK when determining which version to use for project loading. Applies when \"useModernNet\" is set to true.",
  "configuration.omnisharp.sdkPath": "Specifies the path to a .NET SDK installation to use for project loading instead of the highest version installed. Applies when \"useModernNet\" is set to true. Example: /home/username/dotnet/sdks/6.0.300.",
  "configuration.omnisharp.sdkVersion": "Specifies the version of the .NET SDK to use for project loading instead of the highest version installed. Applies when \"useModernNet\" is set to true. Example: 6.0.300.",
  "configuration.omnisharp.useEditorFormattingSettings": "Specifes whether OmniSharp should use VS Code editor settings for C# code formatting (use of tabs, indentation size).",
  "configuration.omnisharp.useModernNet.description": "Use OmniSharp build for .NET 6. This version _does not_ support non-SDK-style .NET Framework projects, including Unity. SDK-style Framework, .NET Core, and .NET 5+ projects should see significant performance improvements.",
  "configuration.omnisharp.useModernNet.title": "Use .NET 6 build of OmniSharp",
  "configuration.razor.languageServer.debug": "Określa, czy czekać na dołączenie debugowania podczas uruchamiania serwera języka.",
  "configuration.razor.languageServer.directory": "Przesłania ścieżkę do katalogu serwera języka Razor.",
  "configuration.razor.languageServer.forceRuntimeCodeGeneration": "(EKSPERYMENTALNE) Włącz łączny czas projektowania/generowanie kodu środowiska uruchomieniowego dla plików Razor",
  "configuration.razor.server.trace": "Określa poziom rejestrowania, który ma być używany dla serwera Razor.",
  "debuggers.coreclr.configurationSnippets.description.attach": "Dołącz debuger platformy .NET (coreclr) do uruchomionego procesu. Można to również zrobić za pomocą polecenia „Dołącz do procesu .NET 5+ lub .NET Core”.",
  "debuggers.coreclr.configurationSnippets.description.blazor-hosted": "Ten fragment kodu służy do uruchamiania nowego procesu w debugerze zestawu WebAssembly platformy Blazor (blazorwasm), określając ścieżkę do pliku wykonywalnego do uruchomienia. W większości przypadków „.NET: Fragment kodu „Launch C# project” (Uruchom projekt C#) jest lepszym wyborem, ale za pomocą tego fragmentu kodu można mieć pełną kontrolę nad wszystkimi opcjami uruchamiania. Ten fragment kodu jest przeznaczony dla hostowanych projektów Platformy Blazor, czyli projektu, który ma zaplecze ASP.NET aplikacji Core do obsługi plików.",
  "debuggers.coreclr.configurationSnippets.description.blazor-standalone": "Ten fragment kodu służy do uruchamiania nowego procesu w debugerze zestawu WebAssembly platformy Blazor (blazorwasm). W większości przypadków „.NET: Fragment kodu „Launch C# project” (Uruchom projekt C#) jest lepszym wyborem, ale za pomocą tego fragmentu kodu można mieć pełną kontrolę nad wszystkimi opcjami uruchamiania. Ten fragment kodu jest przeznaczony dla autonomicznych projektów Platformy Blazor, będących projektem, który nie ma aplikacji zaplecza ASP.NET Core do obsługi plików.",
  "debuggers.coreclr.configurationSnippets.description.console-local": "Ten fragment kodu służy do uruchamiania nowego procesu w debugerze .NET (coreclr), określając ścieżkę do pliku wykonywalnego do uruchomienia. W większości przypadków „.NET: Fragment kodu „Launch C# project” (Uruchom projekt C#) jest lepszym wyborem. Ten fragment kodu jest przydatny, gdy projekt został skompilowany poza tym wystąpieniem programu VS Code lub chcesz hostować kod .NET w niestandardowym pliku wykonywalnym, takim jak określona wersja pliku „dotnet.exe”/„dotnet” lub program .NET Code jest hostowany przez aplikację natywną. Ten fragment kodu jest przeznaczony dla aplikacji konsolowych.",
  "debuggers.coreclr.configurationSnippets.description.remote": "Ten fragment kodu pokazuje, jak zdalnie debugować kod .NET **bez** przy użyciu komunikacji zdalnej programu VS Code. Powinien być używany w przypadkach, gdy chcesz skompilować projekt lokalnie, ale chcesz uruchomić go na innym komputerze.",
  "debuggers.coreclr.configurationSnippets.description.web-local": "Ten fragment kodu służy do uruchamiania nowego procesu w debugerze .NET (coreclr), określając ścieżkę do pliku wykonywalnego do uruchomienia. W większości przypadków „.NET: Fragment kodu „Launch C# project” (Uruchom projekt C#) jest lepszym wyborem. Ten fragment kodu jest przydatny, gdy projekt został skompilowany poza tym wystąpieniem programu VS Code lub chcesz hostować kod .NET w niestandardowym pliku wykonywalnym, takim jak określona wersja pliku „dotnet.exe”/„dotnet” lub program .NET Code jest hostowany przez aplikację natywną. Ten fragment kodu jest przeznaczony dla aplikacji internetowych (ASP.NET Core).",
  "debuggers.coreclr.configurationSnippets.label.attach-local": ".NET: Dołącz do procesu platformy .NET",
  "debuggers.coreclr.configurationSnippets.label.attach-remote": ".NET: Zdalne debugowanie — dołącz do procesu platformy .NET",
  "debuggers.coreclr.configurationSnippets.label.blazor-hosted": ".NET: Zestaw sieci Web — uruchom hostowany projekt Platformy Blazor",
  "debuggers.coreclr.configurationSnippets.label.blazor-standalone": ".NET: Zestaw sieci Web — uruchom autonomiczny projekt Platformy Blazor",
  "debuggers.coreclr.configurationSnippets.label.console-local": ".NET: Uruchom plik wykonywalny (konsola)",
  "debuggers.coreclr.configurationSnippets.label.console-remote": ".NET: Zdalne debugowanie — uruchamianie pliku wykonywalnego (konsola)",
  "debuggers.coreclr.configurationSnippets.label.web-local": ".NET: Uruchom plik wykonywalny (sieć Web)",
  "debuggers.dotnet.configurationSnippets.description": "Ten fragment kodu konfiguruje program VS Code do debugowania projektu języka C#. Opcje debugowania (przykład: argumenty pliku wykonywalnego) można skonfigurować za pomocą pliku „<project-directory>/Properties/launchSettings.json”.",
  "debuggers.dotnet.configurationSnippets.label": ".NET: Uruchom projekt języka C#",
  "debuggers.dotnet.launch.launchConfigurationId.description": "Identyfikator konfiguracji uruchamiania do użycia. Pusty ciąg znaków spowoduje użycie bieżącej aktywnej konfiguracji.",
  "debuggers.dotnet.launch.projectPath.description": "Ścieżka do pliku .csproj.",
  "generateOptionsSchema.args.0.description": "Argumenty wiersza polecenia przekazywane do programu.",
  "generateOptionsSchema.args.1.description": "Wersja konwertowana na ciąg argumentów wiersza polecenia przekazanych do programu.",
  "generateOptionsSchema.checkForDevCert.description": "Jeśli uruchamiasz projekt sieci Web w systemie Windows lub macOS i jest on włączony, debuger sprawdzi, czy komputer ma certyfikat HTTPS z podpisem własnym używany do tworzenia serwerów internetowych działających w punktach końcowych HTTPS. Jeśli nie zostanie określona, wartością domyślną będzie true, gdy ustawiona jest wartość„serverReadyAction”. Ta opcja nie pełni żadnej funkcji w scenariuszach interfejsu użytkownika systemu Linux, zdalnego VS Code i VS Code w sieci Web. Jeśli certyfikat HTTPS nie zostanie znaleziony lub nie będzie zaufany, użytkownik zostanie poproszony o zainstalowanie lub zaufanie.",
  "generateOptionsSchema.console.externalTerminal.enumDescription": "Proces docelowy zostanie uruchomiony wewnątrz własnego terminalu zewnętrznego. W przypadku korzystania z tego trybu należy przełączyć fokus między edytorem Visual Studio Code a zewnętrznym oknem terminalu.",
  "generateOptionsSchema.console.integratedTerminal.enumDescription": "Proces docelowy zostanie uruchomiony wewnątrz zintegrowanego terminalu edytora VS Code.",
  "generateOptionsSchema.console.internalConsole.enumDescription": "Dane wejściowe (stdin) i dane wyjściowe (stdout/stderr) procesu docelowego są kierowane przez konsolę debugowania edytora VS Code.",
  "generateOptionsSchema.console.markdownDescription": "Wskazuje konsolę, do której ma zostać uruchomiony program docelowy. Aby uzyskać więcej informacji, zobacz https://aka.ms/VSCode-CS-LaunchJson-Console.",
  "generateOptionsSchema.console.settingsDescription": "**Uwaga:** _Ta opcja jest używana tylko w przypadku projektów konsoli uruchamianych z typem konfiguracji debugowania „dotnet”_.\r\n\r\nWskazuje konsolę, do której ma zostać uruchomiony program docelowy. Aby uzyskać więcej informacji, zobacz https://aka.ms/VSCode-CS-LaunchJson-Console.",
  "generateOptionsSchema.cwd.description": "Ścieżka do katalogu roboczego debugowanego programu. Ustawieniem domyślnym jest bieżący obszar roboczy.",
  "generateOptionsSchema.debugServer.description": "Tylko dla programowania rozszerzeń debugowania: jeśli określono port, program VS Code próbuje nawiązać połączenie z adapterem debugowania uruchomionym w trybie serwera",
  "generateOptionsSchema.enableStepFiltering.markdownDescription": "Flaga umożliwiająca przejście przez właściwości i operatory. Ta opcja jest domyślnie ustawiona na wartość „true”.",
  "generateOptionsSchema.env.description": "Zmienne środowiskowe przekazywane do programu.",
  "generateOptionsSchema.envFile.markdownDescription": "Zmienne środowiskowe przekazywane do programu przez plik, np. „${workspaceFolder}/.env”",
  "generateOptionsSchema.expressionEvaluationOptions.allowFastEvaluate.description": "W przypadku wartości true (stan domyślny) debuger podejmie próbę szybszego obliczania, symulując wykonywanie prostych właściwości i metod.",
  "generateOptionsSchema.expressionEvaluationOptions.allowImplicitFuncEval.description": "W przypadku wartości true (stan domyślny) debuger automatycznie wywoła metody „pobierz” właściwości i inne niejawne wywołania funkcji.",
  "generateOptionsSchema.expressionEvaluationOptions.allowToString.markdownDescription": "W przypadku wartości true (stan domyślny) debuger automatycznie wywoła metodę „DoCiągu” w celu sformatowania obiektów. Ta opcja nie ma żadnego efektu, jeśli właściwość „allowImplicitFuncEval” ma wartość „false”.",
  "generateOptionsSchema.expressionEvaluationOptions.description": "Opcje umożliwiające kontrolowanie sposobu oceniania wyrażeń przez debugera w poradach dotyczących danych, sekcjach „Wyrażenie kontrolne” i „Zmienne” widoku debugowania lub w konsoli debugowania.",
  "generateOptionsSchema.expressionEvaluationOptions.showRawValues.description": "W przypadku wartości true debuger wyświetli nieprzetworzoną strukturę obiektów w oknach zmiennych.",
  "generateOptionsSchema.externalConsole.markdownDescription": "Atrybut „externalConsole” jest przestarzały. Użyj zamiast niego atrybutu „console”. Ta opcja jest ustawiona domyślnie na wartość „false”.",
  "generateOptionsSchema.justMyCode.markdownDescription": "Gdy ta opcja jest włączona (wartość domyślna), debuger wyświetla tylko kod użytkownika dotyczący informacji o krokach („Mój kod”), ignorując kod systemowy i inny zoptymalizowany kod lub który nie ma symboli debugowania. [Więcej informacji](https://aka.ms/VSCode-CS-LaunchJson-JustMyCode)",
  "generateOptionsSchema.launchBrowser.args.description": "Argumenty do przekazania do polecenia w celu otwarcia przeglądarki. Jest to używane tylko wtedy, gdy element specyficzny dla platformy („osx”, „linux” lub „windows”) nie określa wartości dla elementu „args”. Użyj *polecenia ${auto-detect-url}, aby automatycznie używać adresu, na którym nasłuchuje serwer.",
  "generateOptionsSchema.launchBrowser.description": "Opisuje opcje służące do uruchamiania przeglądarki internetowej w ramach uruchamiania",
  "generateOptionsSchema.launchBrowser.enabled.description": "Określa, czy jest włączone uruchamianie przeglądarki internetowej. Ta opcja jest ustawiona domyślnie na wartość „true”.",
  "generateOptionsSchema.launchBrowser.linux.args.description": "Argumenty do przekazania do polecenia w celu otwarcia przeglądarki. Użyj polecenia ${auto-detect-url}, aby automatycznie używać adresu, na którym nasłuchuje serwer.",
  "generateOptionsSchema.launchBrowser.linux.command.description": "Plik wykonywalny, który uruchomi przeglądarkę internetową.",
  "generateOptionsSchema.launchBrowser.linux.description": "Opcje konfiguracji uruchamiania sieci Web specyficzne dla systemu Linux. Domyślnie spowoduje to uruchomienie przeglądarki przy użyciu polecenia „xdg-open”.",
  "generateOptionsSchema.launchBrowser.osx.args.description": "Argumenty do przekazania do polecenia w celu otwarcia przeglądarki. Użyj polecenia ${auto-detect-url}, aby automatycznie używać adresu, na którym nasłuchuje serwer.",
  "generateOptionsSchema.launchBrowser.osx.command.description": "Plik wykonywalny, który uruchomi przeglądarkę internetową.",
  "generateOptionsSchema.launchBrowser.osx.description": "Opcje konfiguracji uruchamiania sieci Web specyficzne dla systemu OSX. Domyślnie spowoduje to uruchomienie przeglądarki przy użyciu polecenia „open”.",
  "generateOptionsSchema.launchBrowser.windows.args.description": "Argumenty do przekazania do polecenia w celu otwarcia przeglądarki. Użyj polecenia ${auto-detect-url}, aby automatycznie używać adresu, na którym nasłuchuje serwer.",
  "generateOptionsSchema.launchBrowser.windows.command.description": "Plik wykonywalny, który uruchomi przeglądarkę internetową.",
  "generateOptionsSchema.launchBrowser.windows.description": "Opcje konfiguracji uruchamiania sieci Web specyficzne dla systemu Windows. Domyślnie spowoduje to uruchomienie przeglądarki przy użyciu polecenia „cmd /c start”.",
  "generateOptionsSchema.launchSettingsFilePath.markdownDescription": "Ścieżka do pliku launchSettings.json. Jeśli ta opcja nie zostanie ustawiona, debuger będzie wyszukiwać w pliku „{cwd}/Properties/launchSettings.json”.",
  "generateOptionsSchema.launchSettingsProfile.description": "Jeśli ta wartość jest określona, wskazuje nazwę profilu w pliku launchSettings.json do użycia. Jest to ignorowane, jeśli nie znaleziono pliku launchSettings.json. Plik launchSettings.json będzie odczytywany z określonej ścieżki, która powinna być właściwością „launchSettingsFilePath”, lub {cwd}/Properties/launchSettings.json, jeśli nie jest ustawiona. Jeśli ta opcja jest ustawiona na wartość null lub jest pustym ciągiem, wtedy plik launchSettings.json jest ignorowany. Jeśli ta wartość nie zostanie określona, zostanie użyty pierwszy profil „Project”.",
  "generateOptionsSchema.logging.browserStdOut.markdownDescription": "Flaga umożliwiająca określenie, czy tekst stdout z uruchamiania przeglądarki internetowej powinien być rejestrowany w oknie danych wyjściowych. Ta opcja jest ustawiona domyślnie na wartość „true”.",
  "generateOptionsSchema.logging.consoleUsageMessage.description": "Określa, czy komunikat jest rejestrowany, gdy proces docelowy wywołuje interfejs API „Console.Read*”, a stdin jest przekierowywane do konsoli.",
  "generateOptionsSchema.logging.description": "Flagi umożliwiające określenie, które typy komunikatów powinny być rejestrowane w oknie danych wyjściowych.",
  "generateOptionsSchema.logging.diagnosticsLog.debugEngineAPITracing.all.enumDescription": "Drukuj wszystkie wywołania interfejsu API debugera. Jest to bardzo szczegółowe.",
  "generateOptionsSchema.logging.diagnosticsLog.debugEngineAPITracing.error.enumDescription": "Błędy drukowania z wywołań interfejsu API debugera.",
  "generateOptionsSchema.logging.diagnosticsLog.debugEngineAPITracing.markdownDescription": "Określa, czy wywołania interfejsu API do elementu Microsoft.VisualStudio.Debugger.Engine/vsdebugeng.h powinny być drukowane w oknie danych wyjściowych. Ta opcja domyślnie ma wartość „none”.",
  "generateOptionsSchema.logging.diagnosticsLog.debugEngineAPITracing.none.enumDescription": "Wyłącz wywołania interfejsu API śledzenia",
  "generateOptionsSchema.logging.diagnosticsLog.debugRuntimeEventTracing.markdownDescription": "Flaga określająca, czy powinno być włączone pełne śledzenie zdarzeń wywoływanych przez bazowe środowisko uruchomieniowe. Ta opcja jest ustawiona domyślnie na wartość „false”.",
  "generateOptionsSchema.logging.diagnosticsLog.description": "Ustawienia określające, które komunikaty są drukowane w oknie danych wyjściowych z dziennika diagnostycznego debugera. Ten dziennik ma pomóc w rozwiązywaniu problemów z debugerem.",
  "generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.error.enumDescription": "Drukuj komunikaty diagnostyczne na poziomie błędów.",
  "generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.important.enumDescription": "Drukuj ważne komunikaty diagnostyczne.",
  "generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.markdownDescription": "Określa, które komunikaty są drukowane w oknie danych wyjściowych od dyspozytora debugera. Jeśli nie zostanie określona, ustawienie domyślne będzie mieć wartość „none”, chyba że jest włączone jedno z ustawień pełnego dziennika („debugEngineAPITracing”, „debugRuntimeEventTracing”, „expressionEvaluationTracing” lub „startDebuggingTracing”), w którym to przypadku wartość domyślna zmieni się na „normal”.",
  "generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.none.enumDescription": "Nie drukuj dodatkowych komunikatów diagnostycznych.",
  "generateOptionsSchema.logging.diagnosticsLog.dispatcherMessages.normal.enumDescription": "Drukuj wszystkie nieszczegółowe komunikaty diagnostyczne.",
  "generateOptionsSchema.logging.diagnosticsLog.expressionEvaluationTracing.markdownDescription": "Flaga określająca, czy powinno być włączone pełne śledzenie oceny wyrażenia. Ta opcja jest ustawiona domyślnie na wartość „false”.",
  "generateOptionsSchema.logging.diagnosticsLog.protocolMessages.markdownDescription": "Flaga określająca, czy komunikaty protokołu DAP wymieniane między debugerem języka C# i interfejsem użytkownika powinny być rejestrowane w oknie danych wyjściowych. Ta opcja jest ustawiona domyślnie na wartość „false”.",
  "generateOptionsSchema.logging.diagnosticsLog.startDebuggingTracing.markdownDescription": "Flaga określająca, czy powinno być włączone pełne śledzenie uruchamiania debugowania. Ta opcja jest ustawiona domyślnie na wartość „false”.",
  "generateOptionsSchema.logging.elapsedTiming.markdownDescription": "Jeśli ma wartość true, rejestrowanie komunikatów protokołu będzie zawierać właściwości „adapterElapsedTime” i „engineElapsedTime”, aby wskazać czas, który zajęło żądanie w mikrosekundach. Ta opcja jest ustawiona domyślnie na wartość „false”.",
  "generateOptionsSchema.logging.engineLogging.deprecationMessage": "Ustawienie „logging.engineLogging” zostało uznane za przestarzałe na rzecz elementu „logging.diagnosticsLog.protocolMessages”.",
  "generateOptionsSchema.logging.exceptions.markdownDescription": "Flaga umożliwiająca określenie, czy komunikaty o wyjątkach powinny być rejestrowane w oknie danych wyjściowych. Ta opcja jest ustawiona domyślnie na wartość „true”.",
  "generateOptionsSchema.logging.moduleLoad.markdownDescription": "Flaga umożliwiająca określenie, czy zdarzenia ładowania modułu powinny być rejestrowane w oknie danych wyjściowych. Ta opcja jest ustawiona domyślnie na wartość „true”.",
  "generateOptionsSchema.logging.processExit.markdownDescription": "Określa, czy komunikat jest rejestrowany podczas kończenia procesu docelowego lub zatrzymywania debugowania. Ta opcja jest ustawiona domyślnie na wartość „true”.",
  "generateOptionsSchema.logging.programOutput.markdownDescription": "Flaga określająca, czy dane wyjściowe programu powinny być rejestrowane w oknie danych wyjściowych, gdy nie jest używana konsola zewnętrzna. Ta opcja jest ustawiona domyślnie na wartość „true”.",
  "generateOptionsSchema.logging.threadExit.markdownDescription": "Określa, czy komunikat jest rejestrowany po zakończeniu działania wątku w procesie docelowym. Ta opcja jest ustawiona domyślnie na wartość „false”.",
  "generateOptionsSchema.pipeTransport.debuggerPath.description": "Pełna ścieżka do debugera na komputerze docelowym.",
  "generateOptionsSchema.pipeTransport.description": "Jeśli jest obecny, zawiera instrukcje dla debugera, aby połączył się z komputerem zdalnym przy użyciu innego pliku wykonywalnego jako potoku, który będzie przekazywał standardowe dane wejściowe/wyjściowe między programem VS Code a plikiem wykonywalnym zaplecza debugera platformy .NET Core (vsdbg).",
  "generateOptionsSchema.pipeTransport.linux.description": "Opcje konfiguracji uruchamiania potoku specyficznego dla systemu Linux",
  "generateOptionsSchema.pipeTransport.linux.pipeArgs.0.description": "Argumenty wiersza polecenia przekazane do programu potoku. Token ${debuggerCommand} w pipeArgs zostanie zastąpiony przez polecenie pełnego debugera. Ten token można określić śródwierszowo z innymi argumentami. Jeśli element ${debuggerCommand} nie jest używany w żadnym argumencie, polecenie pełnego debugera zamiast tego zostanie dodane na końcu listy argumentów.",
  "generateOptionsSchema.pipeTransport.linux.pipeArgs.1.description": "Wersja konwertowana na ciąg argumentów wiersza polecenia przekazanych do programu potoku. Token ${debuggerCommand} w pipeArgs zostanie zastąpiony przez polecenie pełnego debugera. Ten token można określić śródwierszowo z innymi argumentami. Jeśli element ${debuggerCommand} nie jest używany w żadnym argumencie, polecenie pełnego debugera zamiast tego zostanie dodane na końcu listy argumentów.",
  "generateOptionsSchema.pipeTransport.linux.pipeCwd.description": "W pełni kwalifikowana ścieżka do katalogu roboczego dla programu potoku.",
  "generateOptionsSchema.pipeTransport.linux.pipeEnv.description": "Zmienne środowiskowe przekazywane do programu potoku.",
  "generateOptionsSchema.pipeTransport.linux.pipeProgram.description": "Polecenie w pełni kwalifikowanego potoku do wykonania.",
  "generateOptionsSchema.pipeTransport.linux.quoteArgs.description": "Czy argumenty zawierające znaki, które powinny być podawane (np. spacje), mają być podawane? Wartością domyślną jest „true”. W przypadku ustawienia na wartość false polecenie debugera nie będzie już automatycznie podawane.",
  "generateOptionsSchema.pipeTransport.osx.description": "Opcje konfiguracji uruchamiania potoku specyficznego dla systemu OSX",
  "generateOptionsSchema.pipeTransport.osx.pipeArgs.0.description": "Argumenty wiersza polecenia przekazane do programu potoku. Token ${debuggerCommand} w pipeArgs zostanie zastąpiony przez polecenie pełnego debugera. Ten token można określić śródwierszowo z innymi argumentami. Jeśli element ${debuggerCommand} nie jest używany w żadnym argumencie, polecenie pełnego debugera zamiast tego zostanie dodane na końcu listy argumentów.",
  "generateOptionsSchema.pipeTransport.osx.pipeArgs.1.description": "Wersja konwertowana na ciąg argumentów wiersza polecenia przekazanych do programu potoku. Token ${debuggerCommand} w pipeArgs zostanie zastąpiony przez polecenie pełnego debugera. Ten token można określić śródwierszowo z innymi argumentami. Jeśli element ${debuggerCommand} nie jest używany w żadnym argumencie, polecenie pełnego debugera zamiast tego zostanie dodane na końcu listy argumentów.",
  "generateOptionsSchema.pipeTransport.osx.pipeCwd.description": "W pełni kwalifikowana ścieżka do katalogu roboczego dla programu potoku.",
  "generateOptionsSchema.pipeTransport.osx.pipeEnv.description": "Zmienne środowiskowe przekazywane do programu potoku.",
  "generateOptionsSchema.pipeTransport.osx.pipeProgram.description": "Polecenie w pełni kwalifikowanego potoku do wykonania.",
  "generateOptionsSchema.pipeTransport.osx.quoteArgs.description": "Czy argumenty zawierające znaki, które powinny być podawane (np. spacje), mają być podawane? Wartością domyślną jest „true”. W przypadku ustawienia na wartość false polecenie debugera nie będzie już automatycznie podawane.",
  "generateOptionsSchema.pipeTransport.pipeArgs.0.description": "Argumenty wiersza polecenia przekazane do programu potoku. Token ${debuggerCommand} w pipeArgs zostanie zastąpiony przez polecenie pełnego debugera. Ten token można określić śródwierszowo z innymi argumentami. Jeśli element ${debuggerCommand} nie jest używany w żadnym argumencie, polecenie pełnego debugera zamiast tego zostanie dodane na końcu listy argumentów.",
  "generateOptionsSchema.pipeTransport.pipeArgs.1.description": "Wersja konwertowana na ciąg argumentów wiersza polecenia przekazanych do programu potoku. Token ${debuggerCommand} w pipeArgs zostanie zastąpiony przez polecenie pełnego debugera. Ten token można określić śródwierszowo z innymi argumentami. Jeśli element ${debuggerCommand} nie jest używany w żadnym argumencie, polecenie pełnego debugera zamiast tego zostanie dodane na końcu listy argumentów.",
  "generateOptionsSchema.pipeTransport.pipeCwd.description": "W pełni kwalifikowana ścieżka do katalogu roboczego dla programu potoku.",
  "generateOptionsSchema.pipeTransport.pipeEnv.description": "Zmienne środowiskowe przekazywane do programu potoku.",
  "generateOptionsSchema.pipeTransport.pipeProgram.description": "Polecenie w pełni kwalifikowanego potoku do wykonania.",
  "generateOptionsSchema.pipeTransport.quoteArgs.description": "Czy argumenty zawierające znaki, które powinny być podawane (np. spacje), mają być podawane? Wartością domyślną jest „true”. W przypadku ustawienia na wartość false polecenie debugera nie będzie już automatycznie podawane.",
  "generateOptionsSchema.pipeTransport.windows.description": "Opcje konfiguracji uruchamiania potoku specyficznego dla systemu Windows",
  "generateOptionsSchema.pipeTransport.windows.pipeArgs.0.description": "Argumenty wiersza polecenia przekazane do programu potoku. Token ${debuggerCommand} w pipeArgs zostanie zastąpiony przez polecenie pełnego debugera. Ten token można określić śródwierszowo z innymi argumentami. Jeśli element ${debuggerCommand} nie jest używany w żadnym argumencie, polecenie pełnego debugera zamiast tego zostanie dodane na końcu listy argumentów.",
  "generateOptionsSchema.pipeTransport.windows.pipeArgs.1.description": "Wersja konwertowana na ciąg argumentów wiersza polecenia przekazanych do programu potoku. Token ${debuggerCommand} w pipeArgs zostanie zastąpiony przez polecenie pełnego debugera. Ten token można określić śródwierszowo z innymi argumentami. Jeśli element ${debuggerCommand} nie jest używany w żadnym argumencie, polecenie pełnego debugera zamiast tego zostanie dodane na końcu listy argumentów.",
  "generateOptionsSchema.pipeTransport.windows.pipeCwd.description": "W pełni kwalifikowana ścieżka do katalogu roboczego dla programu potoku.",
  "generateOptionsSchema.pipeTransport.windows.pipeEnv.description": "Zmienne środowiskowe przekazywane do programu potoku.",
  "generateOptionsSchema.pipeTransport.windows.pipeProgram.description": "Polecenie w pełni kwalifikowanego potoku do wykonania.",
  "generateOptionsSchema.pipeTransport.windows.quoteArgs.description": "Czy argumenty zawierające znaki, które powinny być podawane (np. spacje), mają być podawane? Wartością domyślną jest „true”. W przypadku ustawienia na wartość false polecenie debugera nie będzie już automatycznie podawane.",
  "generateOptionsSchema.processId.0.markdownDescription": "Identyfikator procesu, do którego można dołączyć. Użyj znaku \"\", aby uzyskać listę uruchomionych procesów, do których można dołączyć. Jeśli jest używany element „processId”, nie należy używać elementu „processName”.",
  "generateOptionsSchema.processId.1.markdownDescription": "Identyfikator procesu, do którego można dołączyć. Użyj znaku \"\", aby uzyskać listę uruchomionych procesów, do których można dołączyć. Jeśli jest używany element „processId”, nie należy używać elementu „processName”.",
  "generateOptionsSchema.processName.markdownDescription": "Nazwa procesu, do którego można dołączyć. Jeśli jest używany, nie należy używać elementu „processId”.",
  "generateOptionsSchema.program.markdownDescription": "Ścieżka do biblioteki dll aplikacji lub pliku wykonywalnego hosta platformy .NET Core do uruchomienia.\r\nTa właściwość zwykle przyjmuje postać: \"${workspaceFolder}/bin/Debug/(target-framework)/(project-name.dll)\"\r\n\r\nPrzykład: '${workspaceFolder}/bin/Debug/netcoreapp1.1/MyProject.dll'\r\n\r\nGdzie:\r\n\"(target-framework)\" to platforma, dla której jest kompilowany debugowany projekt. Zwykle można to znaleźć w pliku projektu jako właściwość „TargetFramework”.\r\n\r\n\"(project-name.dll)\" to nazwa biblioteki dll danych wyjściowych kompilacji debugowanego projektu. Zwykle jest taka sama jak nazwa pliku projektu, ale z rozszerzeniem „.dll”.",
  "generateOptionsSchema.requireExactSource.markdownDescription": "Flaga wymagająca, aby bieżący kod źródłowy był zgodny z bazą danych pdb. Ta opcja jest ustawiona domyślnie na wartość „true”.",
  "generateOptionsSchema.sourceFileMap.markdownDescription": "Mapuje ścieżki czasu kompilacji z lokalnymi lokalizacjami źródłowymi. Wszystkie wystąpienia ścieżki czasu kompilacji zostaną zastąpione lokalną ścieżką źródłową.\r\n\r\nPrzykład:\r\n\r\n„{\"<build-path>\":\"<local-source-path>\"}”",
  "generateOptionsSchema.sourceLinkOptions.additionalItems.enabled.markdownDescription": "Czy dla tego adresu URL jest włączone narzędzie Source Link? Jeśli nie zostanie określone, ta opcja zostanie domyślnie ustawiona na wartość „true”.",
  "generateOptionsSchema.sourceLinkOptions.markdownDescription": "Opcje określające sposób łączenia Source Link z serwerami sieci Web. [Więcej infiormacji](https://aka.ms/VSCode-DotNet-SourceLink)",
  "generateOptionsSchema.stopAtEntry.markdownDescription": "W przypadku wartości true debuger powinien zostać zatrzymany w punkcie wejścia elementu docelowego. Ta opcja jest ustawiona domyślnie na wartość „false”.",
  "generateOptionsSchema.suppressJITOptimizations.markdownDescription": "W przypadku ustawienia na wartość true, gdy zoptymalizowany moduł (.dll skompilowany w konfiguracji wydania) zostanie załadowany w procesie docelowym, debuger poprosi kompilator JIT o wygenerowanie kodu z wyłączonymi optymalizacjami. [Więcej informacji](https://aka.ms/VSCode-CS-LaunchJson-SuppressJITOptimizations)",
  "generateOptionsSchema.symbolOptions.cachePath.description": "Katalog, w którym powinny być buforowane symbole pobrane z serwerów symboli. Jeśli nie zostanie określony, w systemie Windows debuger będzie domyślnie ustawiony na %TEMP%\\SymbolCache, a w systemach Linux i macOS debuger będzie domyślnie ustawiony na ~/.dotnet/symbolcache.",
  "generateOptionsSchema.symbolOptions.description": "Opcje umożliwiające kontrolowanie sposobu znajdowania i ładowania symboli (plików PDB).",
  "generateOptionsSchema.symbolOptions.moduleFilter.description": "Udostępnia opcje umożliwiające kontrolowanie modułów (plików DLL), dla których debuger będzie próbował załadować symbole (pliki PDB).",
  "generateOptionsSchema.symbolOptions.moduleFilter.excludedModules.description": "Tablica modułów, dla których debuger NIE powinien ładować symboli. Symbole wieloznaczne (przykład: MojaFirma.*.dll) są obsługiwane.\r\n\r\nTa właściwość jest ignorowana, chyba że właściwość „mode” jest ustawiona na wartość „loadAllButExcluded”.",
  "generateOptionsSchema.symbolOptions.moduleFilter.includeSymbolsNextToModules.description": "Jeśli ma wartość true, w przypadku każdego modułu NIE BĘDĄCEGO w tablicy „includedModules” debuger będzie nadal sprawdzał obok modułu i uruchamianego pliku wykonywalnego, ale nie będzie sprawdzał ścieżek na liście wyszukiwania symboli. Ta opcja ma wartość domyślną „true”.\r\n\r\nTa właściwość jest ignorowana, chyba że właściwość „mode” jest ustawiona na wartość „loadOnlyIncluded”.",
  "generateOptionsSchema.symbolOptions.moduleFilter.includeSymbolsOnDemand.description": "Jeśli wartość jest równa true, w przypadku dowolnego modułu NOT w tablicy „includedModules” debuger podejmie próbę pobrania symboli, gdy wykryje, że są potrzebne symbole, na przykład podczas próby wejścia do modułu. Ta opcja domyślnie ma wartość „true”.\r\n\r\nTa właściwość jest ignorowana, chyba że właściwość „mode” jest ustawiona na wartość „loadOnlyIncluded”.",
  "generateOptionsSchema.symbolOptions.moduleFilter.includedModules.description": "Tablica modułów, dla których debuger powinien ładować symbole. Symbole wieloznaczne (przykład: MojaFirma.*.dll) są obsługiwane.\r\n\r\nTa właściwość jest ignorowana, chyba że właściwość „mode” jest ustawiona na wartość „loadOnlyIncluded”.",
  "generateOptionsSchema.symbolOptions.moduleFilter.mode.description": "Steruje dwoma podstawowymi trybami operacyjnymi, w których działa filtr modułu.",
  "generateOptionsSchema.symbolOptions.moduleFilter.mode.loadAllButExcluded.enumDescription": "Załaduj symbole dla wszystkich modułów, jeśli moduł nie znajduje się w tablicy „excludedModules”.",
  "generateOptionsSchema.symbolOptions.moduleFilter.mode.loadOnlyIncluded.enumDescription": "Nie próbuj ładować symboli dla ŻADNEGO modułu, jeśli nie znajduje się w tablicy „includedModules” lub jest ono uwzględniane przez ustawienie „includeSymbolsNextToModules”.",
  "generateOptionsSchema.symbolOptions.searchMicrosoftSymbolServer.description": "W przypadku wartości „true” serwer symboli firmy Microsoft (https​://msdl.microsoft.com​/download/symbols) zostanie dodany do ścieżki wyszukiwania symboli. Jeśli ta opcja nie zostanie określona, domyślnie zostanie wybrana wartość „false”.",
  "generateOptionsSchema.symbolOptions.searchNuGetOrgSymbolServer.description": "W przypadku ustawienia na wartość „true” serwer symboli NuGet.org (https​://symbols.nuget.org​/download/symbols) zostanie dodany do ścieżki wyszukiwania symboli. Jeśli ta opcja nie zostanie określona, domyślnie zostanie ustawiona na wartość „false”.",
  "generateOptionsSchema.symbolOptions.searchPaths.description": "Tablica adresów URL serwera symboli (przykład: http​://MyExampleSymbolServer) lub katalogi (przykład: /build/symbols), aby wyszukać pliki .pdb. Te katalogi będą przeszukiwane oprócz lokalizacji domyślnych — obok modułu i ścieżki, do której pierwotnie przeniesiono plik pdb.",
  "generateOptionsSchema.targetArchitecture.markdownDescription": "[Obsługiwane tylko w przypadku debugowania lokalnego systemu macOS]\r\n\r\nArchitektura obiektu debugowanego. Zostanie automatycznie wykryta, chyba że ten parametr jest ustawiony. Dozwolone wartości to „x86_64” lub „arm_64”.",
  "generateOptionsSchema.targetOutputLogPath.description": "Po ustawieniu tekst, który aplikacja docelowa zapisuje w stdout i stderr (np. Console.WriteLine), zostanie zapisany w określonym pliku. Ta opcja jest ignorowana, jeśli konsola jest ustawiona na wartość inną niż internalConsole, np. \"${workspaceFolder}/out.txt\"",
  "generateOptionsSchema.type.markdownDescription": "Type type of code to debug. Can be either `coreclr` for .NET Core debugging, or `clr` for Desktop .NET Framework. `clr` only works on Windows as the Desktop framework is Windows-only.",
  "viewsWelcome.debug.contents": "[Generuj zasoby języka C# na potrzeby kompilacji i debugowania](polecenie:dotnet.generateAssets)\r\n\r\nAby dowiedzieć się więcej o uruchamianiu pliku launch.json, zobacz [Konfigurowanie pliku launch.json na potrzeby debugowania w języku C#](https://aka.ms/VSCode-CS-LaunchJson)."
}